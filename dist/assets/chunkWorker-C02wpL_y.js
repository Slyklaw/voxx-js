(function(){"use strict";const Ve=Math.sqrt(3),Ti=.5*(Ve-1),Dt=(3-Ve)/6,Ue=m=>Math.floor(m)|0,qe=new Float64Array([1,1,-1,1,1,-1,-1,-1,1,0,-1,0,1,0,-1,0,0,1,0,-1,0,1,0,-1]);function Ei(m=Math.random){const t=Bi(m),e=new Float64Array(t).map(s=>qe[s%12*2]),i=new Float64Array(t).map(s=>qe[s%12*2+1]);return function(n,r){let o=0,a=0,h=0;const l=(n+r)*Ti,c=Ue(n+l),u=Ue(r+l),d=(c+u)*Dt,p=c-d,f=u-d,y=n-p,g=r-f;let M,A;y>g?(M=1,A=0):(M=0,A=1);const w=y-M+Dt,z=g-A+Dt,F=y-1+2*Dt,b=g-1+2*Dt,_=c&255,T=u&255;let E=.5-y*y-g*g;if(E>=0){const C=_+t[T],S=e[C],I=i[C];E*=E,o=E*E*(S*y+I*g)}let B=.5-w*w-z*z;if(B>=0){const C=_+M+t[T+A],S=e[C],I=i[C];B*=B,a=B*B*(S*w+I*z)}let D=.5-F*F-b*b;if(D>=0){const C=_+1+t[T+1],S=e[C],I=i[C];D*=D,h=D*D*(S*F+I*b)}return 70*(o+a+h)}}function Bi(m){const e=new Uint8Array(512);for(let i=0;i<512/2;i++)e[i]=i;for(let i=0;i<512/2-1;i++){const s=i+~~(m()*(256-i)),n=e[i];e[i]=e[s],e[s]=n}for(let i=256;i<512;i++)e[i]=e[i-256];return e}/**
 * @license
 * Copyright 2010-2024 Three.js Authors
 * SPDX-License-Identifier: MIT
 */const He="164",xe=0,ki=1,Le=1,We=100,Xe=204,Ze=205,$e=3,Ri=0,Ge=300,Ye=1e3,Wt=1001,Je=1002,je=1003,Di=1006,Ii=1008,vi=1009,Ni=1014,Oi=1015,Pi=1020,Vi=1023,ge=1026,Qe=1027,Ui=0,Ke="",st="srgb",be="srgb-linear",qi="display-p3",ti="display-p3-linear",Me="linear",ei="srgb",ii="rec709",si="p3",yt=7680,ni=519,Hi=515,ri=35044,Xt=2e3,ai=2001;class Zt{addEventListener(t,e){this._listeners===void 0&&(this._listeners={});const i=this._listeners;i[t]===void 0&&(i[t]=[]),i[t].indexOf(e)===-1&&i[t].push(e)}hasEventListener(t,e){if(this._listeners===void 0)return!1;const i=this._listeners;return i[t]!==void 0&&i[t].indexOf(e)!==-1}removeEventListener(t,e){if(this._listeners===void 0)return;const s=this._listeners[t];if(s!==void 0){const n=s.indexOf(e);n!==-1&&s.splice(n,1)}}dispatchEvent(t){if(this._listeners===void 0)return;const i=this._listeners[t.type];if(i!==void 0){t.target=this;const s=i.slice(0);for(let n=0,r=s.length;n<r;n++)s[n].call(this,t);t.target=null}}}const v=["00","01","02","03","04","05","06","07","08","09","0a","0b","0c","0d","0e","0f","10","11","12","13","14","15","16","17","18","19","1a","1b","1c","1d","1e","1f","20","21","22","23","24","25","26","27","28","29","2a","2b","2c","2d","2e","2f","30","31","32","33","34","35","36","37","38","39","3a","3b","3c","3d","3e","3f","40","41","42","43","44","45","46","47","48","49","4a","4b","4c","4d","4e","4f","50","51","52","53","54","55","56","57","58","59","5a","5b","5c","5d","5e","5f","60","61","62","63","64","65","66","67","68","69","6a","6b","6c","6d","6e","6f","70","71","72","73","74","75","76","77","78","79","7a","7b","7c","7d","7e","7f","80","81","82","83","84","85","86","87","88","89","8a","8b","8c","8d","8e","8f","90","91","92","93","94","95","96","97","98","99","9a","9b","9c","9d","9e","9f","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","aa","ab","ac","ad","ae","af","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","ba","bb","bc","bd","be","bf","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","ca","cb","cc","cd","ce","cf","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","da","db","dc","dd","de","df","e0","e1","e2","e3","e4","e5","e6","e7","e8","e9","ea","eb","ec","ed","ee","ef","f0","f1","f2","f3","f4","f5","f6","f7","f8","f9","fa","fb","fc","fd","fe","ff"];function It(){const m=Math.random()*4294967295|0,t=Math.random()*4294967295|0,e=Math.random()*4294967295|0,i=Math.random()*4294967295|0;return(v[m&255]+v[m>>8&255]+v[m>>16&255]+v[m>>24&255]+"-"+v[t&255]+v[t>>8&255]+"-"+v[t>>16&15|64]+v[t>>24&255]+"-"+v[e&63|128]+v[e>>8&255]+"-"+v[e>>16&255]+v[e>>24&255]+v[i&255]+v[i>>8&255]+v[i>>16&255]+v[i>>24&255]).toLowerCase()}function P(m,t,e){return Math.max(t,Math.min(e,m))}function Li(m,t){return(m%t+t)%t}function we(m,t,e){return(1-e)*m+e*t}function vt(m,t){switch(t.constructor){case Float32Array:return m;case Uint32Array:return m/4294967295;case Uint16Array:return m/65535;case Uint8Array:return m/255;case Int32Array:return Math.max(m/2147483647,-1);case Int16Array:return Math.max(m/32767,-1);case Int8Array:return Math.max(m/127,-1);default:throw new Error("Invalid component type.")}}function V(m,t){switch(t.constructor){case Float32Array:return m;case Uint32Array:return Math.round(m*4294967295);case Uint16Array:return Math.round(m*65535);case Uint8Array:return Math.round(m*255);case Int32Array:return Math.round(m*2147483647);case Int16Array:return Math.round(m*32767);case Int8Array:return Math.round(m*127);default:throw new Error("Invalid component type.")}}class O{constructor(t=0,e=0){O.prototype.isVector2=!0,this.x=t,this.y=e}get width(){return this.x}set width(t){this.x=t}get height(){return this.y}set height(t){this.y=t}set(t,e){return this.x=t,this.y=e,this}setScalar(t){return this.x=t,this.y=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y)}copy(t){return this.x=t.x,this.y=t.y,this}add(t){return this.x+=t.x,this.y+=t.y,this}addScalar(t){return this.x+=t,this.y+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this}sub(t){return this.x-=t.x,this.y-=t.y,this}subScalar(t){return this.x-=t,this.y-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this}multiply(t){return this.x*=t.x,this.y*=t.y,this}multiplyScalar(t){return this.x*=t,this.y*=t,this}divide(t){return this.x/=t.x,this.y/=t.y,this}divideScalar(t){return this.multiplyScalar(1/t)}applyMatrix3(t){const e=this.x,i=this.y,s=t.elements;return this.x=s[0]*e+s[3]*i+s[6],this.y=s[1]*e+s[4]*i+s[7],this}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this}clamp(t,e){return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this}clampScalar(t,e){return this.x=Math.max(t,Math.min(e,this.x)),this.y=Math.max(t,Math.min(e,this.y)),this}clampLength(t,e){const i=this.length();return this.divideScalar(i||1).multiplyScalar(Math.max(t,Math.min(e,i)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(t){return this.x*t.x+this.y*t.y}cross(t){return this.x*t.y-this.y*t.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}angleTo(t){const e=Math.sqrt(this.lengthSq()*t.lengthSq());if(e===0)return Math.PI/2;const i=this.dot(t)/e;return Math.acos(P(i,-1,1))}distanceTo(t){return Math.sqrt(this.distanceToSquared(t))}distanceToSquared(t){const e=this.x-t.x,i=this.y-t.y;return e*e+i*i}manhattanDistanceTo(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this}lerpVectors(t,e,i){return this.x=t.x+(e.x-t.x)*i,this.y=t.y+(e.y-t.y)*i,this}equals(t){return t.x===this.x&&t.y===this.y}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t}fromBufferAttribute(t,e){return this.x=t.getX(e),this.y=t.getY(e),this}rotateAround(t,e){const i=Math.cos(e),s=Math.sin(e),n=this.x-t.x,r=this.y-t.y;return this.x=n*i-r*s+t.x,this.y=n*s+r*i+t.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}}class nt{constructor(t,e,i,s,n,r,o,a,h){nt.prototype.isMatrix3=!0,this.elements=[1,0,0,0,1,0,0,0,1],t!==void 0&&this.set(t,e,i,s,n,r,o,a,h)}set(t,e,i,s,n,r,o,a,h){const l=this.elements;return l[0]=t,l[1]=s,l[2]=o,l[3]=e,l[4]=n,l[5]=a,l[6]=i,l[7]=r,l[8]=h,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(t){const e=this.elements,i=t.elements;return e[0]=i[0],e[1]=i[1],e[2]=i[2],e[3]=i[3],e[4]=i[4],e[5]=i[5],e[6]=i[6],e[7]=i[7],e[8]=i[8],this}extractBasis(t,e,i){return t.setFromMatrix3Column(this,0),e.setFromMatrix3Column(this,1),i.setFromMatrix3Column(this,2),this}setFromMatrix4(t){const e=t.elements;return this.set(e[0],e[4],e[8],e[1],e[5],e[9],e[2],e[6],e[10]),this}multiply(t){return this.multiplyMatrices(this,t)}premultiply(t){return this.multiplyMatrices(t,this)}multiplyMatrices(t,e){const i=t.elements,s=e.elements,n=this.elements,r=i[0],o=i[3],a=i[6],h=i[1],l=i[4],c=i[7],u=i[2],d=i[5],p=i[8],f=s[0],y=s[3],g=s[6],M=s[1],A=s[4],w=s[7],z=s[2],F=s[5],b=s[8];return n[0]=r*f+o*M+a*z,n[3]=r*y+o*A+a*F,n[6]=r*g+o*w+a*b,n[1]=h*f+l*M+c*z,n[4]=h*y+l*A+c*F,n[7]=h*g+l*w+c*b,n[2]=u*f+d*M+p*z,n[5]=u*y+d*A+p*F,n[8]=u*g+d*w+p*b,this}multiplyScalar(t){const e=this.elements;return e[0]*=t,e[3]*=t,e[6]*=t,e[1]*=t,e[4]*=t,e[7]*=t,e[2]*=t,e[5]*=t,e[8]*=t,this}determinant(){const t=this.elements,e=t[0],i=t[1],s=t[2],n=t[3],r=t[4],o=t[5],a=t[6],h=t[7],l=t[8];return e*r*l-e*o*h-i*n*l+i*o*a+s*n*h-s*r*a}invert(){const t=this.elements,e=t[0],i=t[1],s=t[2],n=t[3],r=t[4],o=t[5],a=t[6],h=t[7],l=t[8],c=l*r-o*h,u=o*a-l*n,d=h*n-r*a,p=e*c+i*u+s*d;if(p===0)return this.set(0,0,0,0,0,0,0,0,0);const f=1/p;return t[0]=c*f,t[1]=(s*h-l*i)*f,t[2]=(o*i-s*r)*f,t[3]=u*f,t[4]=(l*e-s*a)*f,t[5]=(s*n-o*e)*f,t[6]=d*f,t[7]=(i*a-h*e)*f,t[8]=(r*e-i*n)*f,this}transpose(){let t;const e=this.elements;return t=e[1],e[1]=e[3],e[3]=t,t=e[2],e[2]=e[6],e[6]=t,t=e[5],e[5]=e[7],e[7]=t,this}getNormalMatrix(t){return this.setFromMatrix4(t).invert().transpose()}transposeIntoArray(t){const e=this.elements;return t[0]=e[0],t[1]=e[3],t[2]=e[6],t[3]=e[1],t[4]=e[4],t[5]=e[7],t[6]=e[2],t[7]=e[5],t[8]=e[8],this}setUvTransform(t,e,i,s,n,r,o){const a=Math.cos(n),h=Math.sin(n);return this.set(i*a,i*h,-i*(a*r+h*o)+r+t,-s*h,s*a,-s*(-h*r+a*o)+o+e,0,0,1),this}scale(t,e){return this.premultiply(_e.makeScale(t,e)),this}rotate(t){return this.premultiply(_e.makeRotation(-t)),this}translate(t,e){return this.premultiply(_e.makeTranslation(t,e)),this}makeTranslation(t,e){return t.isVector2?this.set(1,0,t.x,0,1,t.y,0,0,1):this.set(1,0,t,0,1,e,0,0,1),this}makeRotation(t){const e=Math.cos(t),i=Math.sin(t);return this.set(e,-i,0,i,e,0,0,0,1),this}makeScale(t,e){return this.set(t,0,0,0,e,0,0,0,1),this}equals(t){const e=this.elements,i=t.elements;for(let s=0;s<9;s++)if(e[s]!==i[s])return!1;return!0}fromArray(t,e=0){for(let i=0;i<9;i++)this.elements[i]=t[i+e];return this}toArray(t=[],e=0){const i=this.elements;return t[e]=i[0],t[e+1]=i[1],t[e+2]=i[2],t[e+3]=i[3],t[e+4]=i[4],t[e+5]=i[5],t[e+6]=i[6],t[e+7]=i[7],t[e+8]=i[8],t}clone(){return new this.constructor().fromArray(this.elements)}}const _e=new nt;function Wi(m){for(let t=m.length-1;t>=0;--t)if(m[t]>=65535)return!0;return!1}function oi(m){return document.createElementNS("http://www.w3.org/1999/xhtml",m)}const hi={};function Xi(m){m in hi||(hi[m]=!0,console.warn(m))}const li=new nt().set(.8224621,.177538,0,.0331941,.9668058,0,.0170827,.0723974,.9105199),ci=new nt().set(1.2249401,-.2249404,0,-.0420569,1.0420571,0,-.0196376,-.0786361,1.0982735),$t={[be]:{transfer:Me,primaries:ii,toReference:m=>m,fromReference:m=>m},[st]:{transfer:ei,primaries:ii,toReference:m=>m.convertSRGBToLinear(),fromReference:m=>m.convertLinearToSRGB()},[ti]:{transfer:Me,primaries:si,toReference:m=>m.applyMatrix3(ci),fromReference:m=>m.applyMatrix3(li)},[qi]:{transfer:ei,primaries:si,toReference:m=>m.convertSRGBToLinear().applyMatrix3(ci),fromReference:m=>m.applyMatrix3(li).convertLinearToSRGB()}},Zi=new Set([be,ti]),W={enabled:!0,_workingColorSpace:be,get workingColorSpace(){return this._workingColorSpace},set workingColorSpace(m){if(!Zi.has(m))throw new Error(`Unsupported working color space, "${m}".`);this._workingColorSpace=m},convert:function(m,t,e){if(this.enabled===!1||t===e||!t||!e)return m;const i=$t[t].toReference,s=$t[e].fromReference;return s(i(m))},fromWorkingColorSpace:function(m,t){return this.convert(m,this._workingColorSpace,t)},toWorkingColorSpace:function(m,t){return this.convert(m,t,this._workingColorSpace)},getPrimaries:function(m){return $t[m].primaries},getTransfer:function(m){return m===Ke?Me:$t[m].transfer}};function xt(m){return m<.04045?m*.0773993808:Math.pow(m*.9478672986+.0521327014,2.4)}function ze(m){return m<.0031308?m*12.92:1.055*Math.pow(m,.41666)-.055}let gt;class $i{static getDataURL(t){if(/^data:/i.test(t.src)||typeof HTMLCanvasElement>"u")return t.src;let e;if(t instanceof HTMLCanvasElement)e=t;else{gt===void 0&&(gt=oi("canvas")),gt.width=t.width,gt.height=t.height;const i=gt.getContext("2d");t instanceof ImageData?i.putImageData(t,0,0):i.drawImage(t,0,0,t.width,t.height),e=gt}return e.width>2048||e.height>2048?(console.warn("THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons",t),e.toDataURL("image/jpeg",.6)):e.toDataURL("image/png")}static sRGBToLinear(t){if(typeof HTMLImageElement<"u"&&t instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&t instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&t instanceof ImageBitmap){const e=oi("canvas");e.width=t.width,e.height=t.height;const i=e.getContext("2d");i.drawImage(t,0,0,t.width,t.height);const s=i.getImageData(0,0,t.width,t.height),n=s.data;for(let r=0;r<n.length;r++)n[r]=xt(n[r]/255)*255;return i.putImageData(s,0,0),e}else if(t.data){const e=t.data.slice(0);for(let i=0;i<e.length;i++)e instanceof Uint8Array||e instanceof Uint8ClampedArray?e[i]=Math.floor(xt(e[i]/255)*255):e[i]=xt(e[i]);return{data:e,width:t.width,height:t.height}}else return console.warn("THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied."),t}}let Gi=0;class Yi{constructor(t=null){this.isSource=!0,Object.defineProperty(this,"id",{value:Gi++}),this.uuid=It(),this.data=t,this.dataReady=!0,this.version=0}set needsUpdate(t){t===!0&&this.version++}toJSON(t){const e=t===void 0||typeof t=="string";if(!e&&t.images[this.uuid]!==void 0)return t.images[this.uuid];const i={uuid:this.uuid,url:""},s=this.data;if(s!==null){let n;if(Array.isArray(s)){n=[];for(let r=0,o=s.length;r<o;r++)s[r].isDataTexture?n.push(Ae(s[r].image)):n.push(Ae(s[r]))}else n=Ae(s);i.url=n}return e||(t.images[this.uuid]=i),i}}function Ae(m){return typeof HTMLImageElement<"u"&&m instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&m instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&m instanceof ImageBitmap?$i.getDataURL(m):m.data?{data:Array.from(m.data),width:m.width,height:m.height,type:m.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}let Ji=0;class rt extends Zt{constructor(t=rt.DEFAULT_IMAGE,e=rt.DEFAULT_MAPPING,i=Wt,s=Wt,n=Di,r=Ii,o=Vi,a=vi,h=rt.DEFAULT_ANISOTROPY,l=Ke){super(),this.isTexture=!0,Object.defineProperty(this,"id",{value:Ji++}),this.uuid=It(),this.name="",this.source=new Yi(t),this.mipmaps=[],this.mapping=e,this.channel=0,this.wrapS=i,this.wrapT=s,this.magFilter=n,this.minFilter=r,this.anisotropy=h,this.format=o,this.internalFormat=null,this.type=a,this.offset=new O(0,0),this.repeat=new O(1,1),this.center=new O(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new nt,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.colorSpace=l,this.userData={},this.version=0,this.onUpdate=null,this.isRenderTargetTexture=!1,this.pmremVersion=0}get image(){return this.source.data}set image(t=null){this.source.data=t}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}clone(){return new this.constructor().copy(this)}copy(t){return this.name=t.name,this.source=t.source,this.mipmaps=t.mipmaps.slice(0),this.mapping=t.mapping,this.channel=t.channel,this.wrapS=t.wrapS,this.wrapT=t.wrapT,this.magFilter=t.magFilter,this.minFilter=t.minFilter,this.anisotropy=t.anisotropy,this.format=t.format,this.internalFormat=t.internalFormat,this.type=t.type,this.offset.copy(t.offset),this.repeat.copy(t.repeat),this.center.copy(t.center),this.rotation=t.rotation,this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrix.copy(t.matrix),this.generateMipmaps=t.generateMipmaps,this.premultiplyAlpha=t.premultiplyAlpha,this.flipY=t.flipY,this.unpackAlignment=t.unpackAlignment,this.colorSpace=t.colorSpace,this.userData=JSON.parse(JSON.stringify(t.userData)),this.needsUpdate=!0,this}toJSON(t){const e=t===void 0||typeof t=="string";if(!e&&t.textures[this.uuid]!==void 0)return t.textures[this.uuid];const i={metadata:{version:4.6,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,image:this.source.toJSON(t).uuid,mapping:this.mapping,channel:this.channel,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,internalFormat:this.internalFormat,type:this.type,colorSpace:this.colorSpace,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,generateMipmaps:this.generateMipmaps,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};return Object.keys(this.userData).length>0&&(i.userData=this.userData),e||(t.textures[this.uuid]=i),i}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(t){if(this.mapping!==Ge)return t;if(t.applyMatrix3(this.matrix),t.x<0||t.x>1)switch(this.wrapS){case Ye:t.x=t.x-Math.floor(t.x);break;case Wt:t.x=t.x<0?0:1;break;case Je:Math.abs(Math.floor(t.x)%2)===1?t.x=Math.ceil(t.x)-t.x:t.x=t.x-Math.floor(t.x);break}if(t.y<0||t.y>1)switch(this.wrapT){case Ye:t.y=t.y-Math.floor(t.y);break;case Wt:t.y=t.y<0?0:1;break;case Je:Math.abs(Math.floor(t.y)%2)===1?t.y=Math.ceil(t.y)-t.y:t.y=t.y-Math.floor(t.y);break}return this.flipY&&(t.y=1-t.y),t}set needsUpdate(t){t===!0&&(this.version++,this.source.needsUpdate=!0)}set needsPMREMUpdate(t){t===!0&&this.pmremVersion++}}rt.DEFAULT_IMAGE=null,rt.DEFAULT_MAPPING=Ge,rt.DEFAULT_ANISOTROPY=1;class Nt{constructor(t=0,e=0,i=0,s=1){this.isQuaternion=!0,this._x=t,this._y=e,this._z=i,this._w=s}static slerpFlat(t,e,i,s,n,r,o){let a=i[s+0],h=i[s+1],l=i[s+2],c=i[s+3];const u=n[r+0],d=n[r+1],p=n[r+2],f=n[r+3];if(o===0){t[e+0]=a,t[e+1]=h,t[e+2]=l,t[e+3]=c;return}if(o===1){t[e+0]=u,t[e+1]=d,t[e+2]=p,t[e+3]=f;return}if(c!==f||a!==u||h!==d||l!==p){let y=1-o;const g=a*u+h*d+l*p+c*f,M=g>=0?1:-1,A=1-g*g;if(A>Number.EPSILON){const z=Math.sqrt(A),F=Math.atan2(z,g*M);y=Math.sin(y*F)/z,o=Math.sin(o*F)/z}const w=o*M;if(a=a*y+u*w,h=h*y+d*w,l=l*y+p*w,c=c*y+f*w,y===1-o){const z=1/Math.sqrt(a*a+h*h+l*l+c*c);a*=z,h*=z,l*=z,c*=z}}t[e]=a,t[e+1]=h,t[e+2]=l,t[e+3]=c}static multiplyQuaternionsFlat(t,e,i,s,n,r){const o=i[s],a=i[s+1],h=i[s+2],l=i[s+3],c=n[r],u=n[r+1],d=n[r+2],p=n[r+3];return t[e]=o*p+l*c+a*d-h*u,t[e+1]=a*p+l*u+h*c-o*d,t[e+2]=h*p+l*d+o*u-a*c,t[e+3]=l*p-o*c-a*u-h*d,t}get x(){return this._x}set x(t){this._x=t,this._onChangeCallback()}get y(){return this._y}set y(t){this._y=t,this._onChangeCallback()}get z(){return this._z}set z(t){this._z=t,this._onChangeCallback()}get w(){return this._w}set w(t){this._w=t,this._onChangeCallback()}set(t,e,i,s){return this._x=t,this._y=e,this._z=i,this._w=s,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(t){return this._x=t.x,this._y=t.y,this._z=t.z,this._w=t.w,this._onChangeCallback(),this}setFromEuler(t,e=!0){const i=t._x,s=t._y,n=t._z,r=t._order,o=Math.cos,a=Math.sin,h=o(i/2),l=o(s/2),c=o(n/2),u=a(i/2),d=a(s/2),p=a(n/2);switch(r){case"XYZ":this._x=u*l*c+h*d*p,this._y=h*d*c-u*l*p,this._z=h*l*p+u*d*c,this._w=h*l*c-u*d*p;break;case"YXZ":this._x=u*l*c+h*d*p,this._y=h*d*c-u*l*p,this._z=h*l*p-u*d*c,this._w=h*l*c+u*d*p;break;case"ZXY":this._x=u*l*c-h*d*p,this._y=h*d*c+u*l*p,this._z=h*l*p+u*d*c,this._w=h*l*c-u*d*p;break;case"ZYX":this._x=u*l*c-h*d*p,this._y=h*d*c+u*l*p,this._z=h*l*p-u*d*c,this._w=h*l*c+u*d*p;break;case"YZX":this._x=u*l*c+h*d*p,this._y=h*d*c+u*l*p,this._z=h*l*p-u*d*c,this._w=h*l*c-u*d*p;break;case"XZY":this._x=u*l*c-h*d*p,this._y=h*d*c-u*l*p,this._z=h*l*p+u*d*c,this._w=h*l*c+u*d*p;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+r)}return e===!0&&this._onChangeCallback(),this}setFromAxisAngle(t,e){const i=e/2,s=Math.sin(i);return this._x=t.x*s,this._y=t.y*s,this._z=t.z*s,this._w=Math.cos(i),this._onChangeCallback(),this}setFromRotationMatrix(t){const e=t.elements,i=e[0],s=e[4],n=e[8],r=e[1],o=e[5],a=e[9],h=e[2],l=e[6],c=e[10],u=i+o+c;if(u>0){const d=.5/Math.sqrt(u+1);this._w=.25/d,this._x=(l-a)*d,this._y=(n-h)*d,this._z=(r-s)*d}else if(i>o&&i>c){const d=2*Math.sqrt(1+i-o-c);this._w=(l-a)/d,this._x=.25*d,this._y=(s+r)/d,this._z=(n+h)/d}else if(o>c){const d=2*Math.sqrt(1+o-i-c);this._w=(n-h)/d,this._x=(s+r)/d,this._y=.25*d,this._z=(a+l)/d}else{const d=2*Math.sqrt(1+c-i-o);this._w=(r-s)/d,this._x=(n+h)/d,this._y=(a+l)/d,this._z=.25*d}return this._onChangeCallback(),this}setFromUnitVectors(t,e){let i=t.dot(e)+1;return i<Number.EPSILON?(i=0,Math.abs(t.x)>Math.abs(t.z)?(this._x=-t.y,this._y=t.x,this._z=0,this._w=i):(this._x=0,this._y=-t.z,this._z=t.y,this._w=i)):(this._x=t.y*e.z-t.z*e.y,this._y=t.z*e.x-t.x*e.z,this._z=t.x*e.y-t.y*e.x,this._w=i),this.normalize()}angleTo(t){return 2*Math.acos(Math.abs(P(this.dot(t),-1,1)))}rotateTowards(t,e){const i=this.angleTo(t);if(i===0)return this;const s=Math.min(1,e/i);return this.slerp(t,s),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(t){return this._x*t._x+this._y*t._y+this._z*t._z+this._w*t._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let t=this.length();return t===0?(this._x=0,this._y=0,this._z=0,this._w=1):(t=1/t,this._x=this._x*t,this._y=this._y*t,this._z=this._z*t,this._w=this._w*t),this._onChangeCallback(),this}multiply(t){return this.multiplyQuaternions(this,t)}premultiply(t){return this.multiplyQuaternions(t,this)}multiplyQuaternions(t,e){const i=t._x,s=t._y,n=t._z,r=t._w,o=e._x,a=e._y,h=e._z,l=e._w;return this._x=i*l+r*o+s*h-n*a,this._y=s*l+r*a+n*o-i*h,this._z=n*l+r*h+i*a-s*o,this._w=r*l-i*o-s*a-n*h,this._onChangeCallback(),this}slerp(t,e){if(e===0)return this;if(e===1)return this.copy(t);const i=this._x,s=this._y,n=this._z,r=this._w;let o=r*t._w+i*t._x+s*t._y+n*t._z;if(o<0?(this._w=-t._w,this._x=-t._x,this._y=-t._y,this._z=-t._z,o=-o):this.copy(t),o>=1)return this._w=r,this._x=i,this._y=s,this._z=n,this;const a=1-o*o;if(a<=Number.EPSILON){const d=1-e;return this._w=d*r+e*this._w,this._x=d*i+e*this._x,this._y=d*s+e*this._y,this._z=d*n+e*this._z,this.normalize(),this}const h=Math.sqrt(a),l=Math.atan2(h,o),c=Math.sin((1-e)*l)/h,u=Math.sin(e*l)/h;return this._w=r*c+this._w*u,this._x=i*c+this._x*u,this._y=s*c+this._y*u,this._z=n*c+this._z*u,this._onChangeCallback(),this}slerpQuaternions(t,e,i){return this.copy(t).slerp(e,i)}random(){const t=2*Math.PI*Math.random(),e=2*Math.PI*Math.random(),i=Math.random(),s=Math.sqrt(1-i),n=Math.sqrt(i);return this.set(s*Math.sin(t),s*Math.cos(t),n*Math.sin(e),n*Math.cos(e))}equals(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._w===this._w}fromArray(t,e=0){return this._x=t[e],this._y=t[e+1],this._z=t[e+2],this._w=t[e+3],this._onChangeCallback(),this}toArray(t=[],e=0){return t[e]=this._x,t[e+1]=this._y,t[e+2]=this._z,t[e+3]=this._w,t}fromBufferAttribute(t,e){return this._x=t.getX(e),this._y=t.getY(e),this._z=t.getZ(e),this._w=t.getW(e),this._onChangeCallback(),this}toJSON(){return this.toArray()}_onChange(t){return this._onChangeCallback=t,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._w}}class x{constructor(t=0,e=0,i=0){x.prototype.isVector3=!0,this.x=t,this.y=e,this.z=i}set(t,e,i){return i===void 0&&(i=this.z),this.x=t,this.y=e,this.z=i,this}setScalar(t){return this.x=t,this.y=t,this.z=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setZ(t){return this.z=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;case 2:this.z=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this}add(t){return this.x+=t.x,this.y+=t.y,this.z+=t.z,this}addScalar(t){return this.x+=t,this.y+=t,this.z+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this.z=t.z+e.z,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this.z+=t.z*e,this}sub(t){return this.x-=t.x,this.y-=t.y,this.z-=t.z,this}subScalar(t){return this.x-=t,this.y-=t,this.z-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this.z=t.z-e.z,this}multiply(t){return this.x*=t.x,this.y*=t.y,this.z*=t.z,this}multiplyScalar(t){return this.x*=t,this.y*=t,this.z*=t,this}multiplyVectors(t,e){return this.x=t.x*e.x,this.y=t.y*e.y,this.z=t.z*e.z,this}applyEuler(t){return this.applyQuaternion(ui.setFromEuler(t))}applyAxisAngle(t,e){return this.applyQuaternion(ui.setFromAxisAngle(t,e))}applyMatrix3(t){const e=this.x,i=this.y,s=this.z,n=t.elements;return this.x=n[0]*e+n[3]*i+n[6]*s,this.y=n[1]*e+n[4]*i+n[7]*s,this.z=n[2]*e+n[5]*i+n[8]*s,this}applyNormalMatrix(t){return this.applyMatrix3(t).normalize()}applyMatrix4(t){const e=this.x,i=this.y,s=this.z,n=t.elements,r=1/(n[3]*e+n[7]*i+n[11]*s+n[15]);return this.x=(n[0]*e+n[4]*i+n[8]*s+n[12])*r,this.y=(n[1]*e+n[5]*i+n[9]*s+n[13])*r,this.z=(n[2]*e+n[6]*i+n[10]*s+n[14])*r,this}applyQuaternion(t){const e=this.x,i=this.y,s=this.z,n=t.x,r=t.y,o=t.z,a=t.w,h=2*(r*s-o*i),l=2*(o*e-n*s),c=2*(n*i-r*e);return this.x=e+a*h+r*c-o*l,this.y=i+a*l+o*h-n*c,this.z=s+a*c+n*l-r*h,this}project(t){return this.applyMatrix4(t.matrixWorldInverse).applyMatrix4(t.projectionMatrix)}unproject(t){return this.applyMatrix4(t.projectionMatrixInverse).applyMatrix4(t.matrixWorld)}transformDirection(t){const e=this.x,i=this.y,s=this.z,n=t.elements;return this.x=n[0]*e+n[4]*i+n[8]*s,this.y=n[1]*e+n[5]*i+n[9]*s,this.z=n[2]*e+n[6]*i+n[10]*s,this.normalize()}divide(t){return this.x/=t.x,this.y/=t.y,this.z/=t.z,this}divideScalar(t){return this.multiplyScalar(1/t)}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this}clamp(t,e){return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this.z=Math.max(t.z,Math.min(e.z,this.z)),this}clampScalar(t,e){return this.x=Math.max(t,Math.min(e,this.x)),this.y=Math.max(t,Math.min(e,this.y)),this.z=Math.max(t,Math.min(e,this.z)),this}clampLength(t,e){const i=this.length();return this.divideScalar(i||1).multiplyScalar(Math.max(t,Math.min(e,i)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this.z+=(t.z-this.z)*e,this}lerpVectors(t,e,i){return this.x=t.x+(e.x-t.x)*i,this.y=t.y+(e.y-t.y)*i,this.z=t.z+(e.z-t.z)*i,this}cross(t){return this.crossVectors(this,t)}crossVectors(t,e){const i=t.x,s=t.y,n=t.z,r=e.x,o=e.y,a=e.z;return this.x=s*a-n*o,this.y=n*r-i*a,this.z=i*o-s*r,this}projectOnVector(t){const e=t.lengthSq();if(e===0)return this.set(0,0,0);const i=t.dot(this)/e;return this.copy(t).multiplyScalar(i)}projectOnPlane(t){return Se.copy(this).projectOnVector(t),this.sub(Se)}reflect(t){return this.sub(Se.copy(t).multiplyScalar(2*this.dot(t)))}angleTo(t){const e=Math.sqrt(this.lengthSq()*t.lengthSq());if(e===0)return Math.PI/2;const i=this.dot(t)/e;return Math.acos(P(i,-1,1))}distanceTo(t){return Math.sqrt(this.distanceToSquared(t))}distanceToSquared(t){const e=this.x-t.x,i=this.y-t.y,s=this.z-t.z;return e*e+i*i+s*s}manhattanDistanceTo(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)+Math.abs(this.z-t.z)}setFromSpherical(t){return this.setFromSphericalCoords(t.radius,t.phi,t.theta)}setFromSphericalCoords(t,e,i){const s=Math.sin(e)*t;return this.x=s*Math.sin(i),this.y=Math.cos(e)*t,this.z=s*Math.cos(i),this}setFromCylindrical(t){return this.setFromCylindricalCoords(t.radius,t.theta,t.y)}setFromCylindricalCoords(t,e,i){return this.x=t*Math.sin(e),this.y=i,this.z=t*Math.cos(e),this}setFromMatrixPosition(t){const e=t.elements;return this.x=e[12],this.y=e[13],this.z=e[14],this}setFromMatrixScale(t){const e=this.setFromMatrixColumn(t,0).length(),i=this.setFromMatrixColumn(t,1).length(),s=this.setFromMatrixColumn(t,2).length();return this.x=e,this.y=i,this.z=s,this}setFromMatrixColumn(t,e){return this.fromArray(t.elements,e*4)}setFromMatrix3Column(t,e){return this.fromArray(t.elements,e*3)}setFromEuler(t){return this.x=t._x,this.y=t._y,this.z=t._z,this}setFromColor(t){return this.x=t.r,this.y=t.g,this.z=t.b,this}equals(t){return t.x===this.x&&t.y===this.y&&t.z===this.z}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this.z=t[e+2],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t[e+2]=this.z,t}fromBufferAttribute(t,e){return this.x=t.getX(e),this.y=t.getY(e),this.z=t.getZ(e),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){const t=Math.random()*Math.PI*2,e=Math.random()*2-1,i=Math.sqrt(1-e*e);return this.x=i*Math.cos(t),this.y=e,this.z=i*Math.sin(t),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}}const Se=new x,ui=new Nt;class Ot{constructor(t=new x(1/0,1/0,1/0),e=new x(-1/0,-1/0,-1/0)){this.isBox3=!0,this.min=t,this.max=e}set(t,e){return this.min.copy(t),this.max.copy(e),this}setFromArray(t){this.makeEmpty();for(let e=0,i=t.length;e<i;e+=3)this.expandByPoint(X.fromArray(t,e));return this}setFromBufferAttribute(t){this.makeEmpty();for(let e=0,i=t.count;e<i;e++)this.expandByPoint(X.fromBufferAttribute(t,e));return this}setFromPoints(t){this.makeEmpty();for(let e=0,i=t.length;e<i;e++)this.expandByPoint(t[e]);return this}setFromCenterAndSize(t,e){const i=X.copy(e).multiplyScalar(.5);return this.min.copy(t).sub(i),this.max.copy(t).add(i),this}setFromObject(t,e=!1){return this.makeEmpty(),this.expandByObject(t,e)}clone(){return new this.constructor().copy(this)}copy(t){return this.min.copy(t.min),this.max.copy(t.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(t){return this.isEmpty()?t.set(0,0,0):t.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(t){return this.isEmpty()?t.set(0,0,0):t.subVectors(this.max,this.min)}expandByPoint(t){return this.min.min(t),this.max.max(t),this}expandByVector(t){return this.min.sub(t),this.max.add(t),this}expandByScalar(t){return this.min.addScalar(-t),this.max.addScalar(t),this}expandByObject(t,e=!1){t.updateWorldMatrix(!1,!1);const i=t.geometry;if(i!==void 0){const n=i.getAttribute("position");if(e===!0&&n!==void 0&&t.isInstancedMesh!==!0)for(let r=0,o=n.count;r<o;r++)t.isMesh===!0?t.getVertexPosition(r,X):X.fromBufferAttribute(n,r),X.applyMatrix4(t.matrixWorld),this.expandByPoint(X);else t.boundingBox!==void 0?(t.boundingBox===null&&t.computeBoundingBox(),Gt.copy(t.boundingBox)):(i.boundingBox===null&&i.computeBoundingBox(),Gt.copy(i.boundingBox)),Gt.applyMatrix4(t.matrixWorld),this.union(Gt)}const s=t.children;for(let n=0,r=s.length;n<r;n++)this.expandByObject(s[n],e);return this}containsPoint(t){return!(t.x<this.min.x||t.x>this.max.x||t.y<this.min.y||t.y>this.max.y||t.z<this.min.z||t.z>this.max.z)}containsBox(t){return this.min.x<=t.min.x&&t.max.x<=this.max.x&&this.min.y<=t.min.y&&t.max.y<=this.max.y&&this.min.z<=t.min.z&&t.max.z<=this.max.z}getParameter(t,e){return e.set((t.x-this.min.x)/(this.max.x-this.min.x),(t.y-this.min.y)/(this.max.y-this.min.y),(t.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(t){return!(t.max.x<this.min.x||t.min.x>this.max.x||t.max.y<this.min.y||t.min.y>this.max.y||t.max.z<this.min.z||t.min.z>this.max.z)}intersectsSphere(t){return this.clampPoint(t.center,X),X.distanceToSquared(t.center)<=t.radius*t.radius}intersectsPlane(t){let e,i;return t.normal.x>0?(e=t.normal.x*this.min.x,i=t.normal.x*this.max.x):(e=t.normal.x*this.max.x,i=t.normal.x*this.min.x),t.normal.y>0?(e+=t.normal.y*this.min.y,i+=t.normal.y*this.max.y):(e+=t.normal.y*this.max.y,i+=t.normal.y*this.min.y),t.normal.z>0?(e+=t.normal.z*this.min.z,i+=t.normal.z*this.max.z):(e+=t.normal.z*this.max.z,i+=t.normal.z*this.min.z),e<=-t.constant&&i>=-t.constant}intersectsTriangle(t){if(this.isEmpty())return!1;this.getCenter(Pt),Yt.subVectors(this.max,Pt),bt.subVectors(t.a,Pt),Mt.subVectors(t.b,Pt),wt.subVectors(t.c,Pt),at.subVectors(Mt,bt),ot.subVectors(wt,Mt),dt.subVectors(bt,wt);let e=[0,-at.z,at.y,0,-ot.z,ot.y,0,-dt.z,dt.y,at.z,0,-at.x,ot.z,0,-ot.x,dt.z,0,-dt.x,-at.y,at.x,0,-ot.y,ot.x,0,-dt.y,dt.x,0];return!Fe(e,bt,Mt,wt,Yt)||(e=[1,0,0,0,1,0,0,0,1],!Fe(e,bt,Mt,wt,Yt))?!1:(Jt.crossVectors(at,ot),e=[Jt.x,Jt.y,Jt.z],Fe(e,bt,Mt,wt,Yt))}clampPoint(t,e){return e.copy(t).clamp(this.min,this.max)}distanceToPoint(t){return this.clampPoint(t,X).distanceTo(t)}getBoundingSphere(t){return this.isEmpty()?t.makeEmpty():(this.getCenter(t.center),t.radius=this.getSize(X).length()*.5),t}intersect(t){return this.min.max(t.min),this.max.min(t.max),this.isEmpty()&&this.makeEmpty(),this}union(t){return this.min.min(t.min),this.max.max(t.max),this}applyMatrix4(t){return this.isEmpty()?this:(j[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(t),j[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(t),j[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(t),j[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(t),j[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(t),j[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(t),j[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(t),j[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(t),this.setFromPoints(j),this)}translate(t){return this.min.add(t),this.max.add(t),this}equals(t){return t.min.equals(this.min)&&t.max.equals(this.max)}}const j=[new x,new x,new x,new x,new x,new x,new x,new x],X=new x,Gt=new Ot,bt=new x,Mt=new x,wt=new x,at=new x,ot=new x,dt=new x,Pt=new x,Yt=new x,Jt=new x,pt=new x;function Fe(m,t,e,i,s){for(let n=0,r=m.length-3;n<=r;n+=3){pt.fromArray(m,n);const o=s.x*Math.abs(pt.x)+s.y*Math.abs(pt.y)+s.z*Math.abs(pt.z),a=t.dot(pt),h=e.dot(pt),l=i.dot(pt);if(Math.max(-Math.max(a,h,l),Math.min(a,h,l))>o)return!1}return!0}const ji=new Ot,Vt=new x,Ce=new x;class di{constructor(t=new x,e=-1){this.isSphere=!0,this.center=t,this.radius=e}set(t,e){return this.center.copy(t),this.radius=e,this}setFromPoints(t,e){const i=this.center;e!==void 0?i.copy(e):ji.setFromPoints(t).getCenter(i);let s=0;for(let n=0,r=t.length;n<r;n++)s=Math.max(s,i.distanceToSquared(t[n]));return this.radius=Math.sqrt(s),this}copy(t){return this.center.copy(t.center),this.radius=t.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(t){return t.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(t){return t.distanceTo(this.center)-this.radius}intersectsSphere(t){const e=this.radius+t.radius;return t.center.distanceToSquared(this.center)<=e*e}intersectsBox(t){return t.intersectsSphere(this)}intersectsPlane(t){return Math.abs(t.distanceToPoint(this.center))<=this.radius}clampPoint(t,e){const i=this.center.distanceToSquared(t);return e.copy(t),i>this.radius*this.radius&&(e.sub(this.center).normalize(),e.multiplyScalar(this.radius).add(this.center)),e}getBoundingBox(t){return this.isEmpty()?(t.makeEmpty(),t):(t.set(this.center,this.center),t.expandByScalar(this.radius),t)}applyMatrix4(t){return this.center.applyMatrix4(t),this.radius=this.radius*t.getMaxScaleOnAxis(),this}translate(t){return this.center.add(t),this}expandByPoint(t){if(this.isEmpty())return this.center.copy(t),this.radius=0,this;Vt.subVectors(t,this.center);const e=Vt.lengthSq();if(e>this.radius*this.radius){const i=Math.sqrt(e),s=(i-this.radius)*.5;this.center.addScaledVector(Vt,s/i),this.radius+=s}return this}union(t){return t.isEmpty()?this:this.isEmpty()?(this.copy(t),this):(this.center.equals(t.center)===!0?this.radius=Math.max(this.radius,t.radius):(Ce.subVectors(t.center,this.center).setLength(t.radius),this.expandByPoint(Vt.copy(t.center).add(Ce)),this.expandByPoint(Vt.copy(t.center).sub(Ce))),this)}equals(t){return t.center.equals(this.center)&&t.radius===this.radius}clone(){return new this.constructor().copy(this)}}const Q=new x,Te=new x,jt=new x,ht=new x,Ee=new x,Qt=new x,Be=new x;class Qi{constructor(t=new x,e=new x(0,0,-1)){this.origin=t,this.direction=e}set(t,e){return this.origin.copy(t),this.direction.copy(e),this}copy(t){return this.origin.copy(t.origin),this.direction.copy(t.direction),this}at(t,e){return e.copy(this.origin).addScaledVector(this.direction,t)}lookAt(t){return this.direction.copy(t).sub(this.origin).normalize(),this}recast(t){return this.origin.copy(this.at(t,Q)),this}closestPointToPoint(t,e){e.subVectors(t,this.origin);const i=e.dot(this.direction);return i<0?e.copy(this.origin):e.copy(this.origin).addScaledVector(this.direction,i)}distanceToPoint(t){return Math.sqrt(this.distanceSqToPoint(t))}distanceSqToPoint(t){const e=Q.subVectors(t,this.origin).dot(this.direction);return e<0?this.origin.distanceToSquared(t):(Q.copy(this.origin).addScaledVector(this.direction,e),Q.distanceToSquared(t))}distanceSqToSegment(t,e,i,s){Te.copy(t).add(e).multiplyScalar(.5),jt.copy(e).sub(t).normalize(),ht.copy(this.origin).sub(Te);const n=t.distanceTo(e)*.5,r=-this.direction.dot(jt),o=ht.dot(this.direction),a=-ht.dot(jt),h=ht.lengthSq(),l=Math.abs(1-r*r);let c,u,d,p;if(l>0)if(c=r*a-o,u=r*o-a,p=n*l,c>=0)if(u>=-p)if(u<=p){const f=1/l;c*=f,u*=f,d=c*(c+r*u+2*o)+u*(r*c+u+2*a)+h}else u=n,c=Math.max(0,-(r*u+o)),d=-c*c+u*(u+2*a)+h;else u=-n,c=Math.max(0,-(r*u+o)),d=-c*c+u*(u+2*a)+h;else u<=-p?(c=Math.max(0,-(-r*n+o)),u=c>0?-n:Math.min(Math.max(-n,-a),n),d=-c*c+u*(u+2*a)+h):u<=p?(c=0,u=Math.min(Math.max(-n,-a),n),d=u*(u+2*a)+h):(c=Math.max(0,-(r*n+o)),u=c>0?n:Math.min(Math.max(-n,-a),n),d=-c*c+u*(u+2*a)+h);else u=r>0?-n:n,c=Math.max(0,-(r*u+o)),d=-c*c+u*(u+2*a)+h;return i&&i.copy(this.origin).addScaledVector(this.direction,c),s&&s.copy(Te).addScaledVector(jt,u),d}intersectSphere(t,e){Q.subVectors(t.center,this.origin);const i=Q.dot(this.direction),s=Q.dot(Q)-i*i,n=t.radius*t.radius;if(s>n)return null;const r=Math.sqrt(n-s),o=i-r,a=i+r;return a<0?null:o<0?this.at(a,e):this.at(o,e)}intersectsSphere(t){return this.distanceSqToPoint(t.center)<=t.radius*t.radius}distanceToPlane(t){const e=t.normal.dot(this.direction);if(e===0)return t.distanceToPoint(this.origin)===0?0:null;const i=-(this.origin.dot(t.normal)+t.constant)/e;return i>=0?i:null}intersectPlane(t,e){const i=this.distanceToPlane(t);return i===null?null:this.at(i,e)}intersectsPlane(t){const e=t.distanceToPoint(this.origin);return e===0||t.normal.dot(this.direction)*e<0}intersectBox(t,e){let i,s,n,r,o,a;const h=1/this.direction.x,l=1/this.direction.y,c=1/this.direction.z,u=this.origin;return h>=0?(i=(t.min.x-u.x)*h,s=(t.max.x-u.x)*h):(i=(t.max.x-u.x)*h,s=(t.min.x-u.x)*h),l>=0?(n=(t.min.y-u.y)*l,r=(t.max.y-u.y)*l):(n=(t.max.y-u.y)*l,r=(t.min.y-u.y)*l),i>r||n>s||((n>i||isNaN(i))&&(i=n),(r<s||isNaN(s))&&(s=r),c>=0?(o=(t.min.z-u.z)*c,a=(t.max.z-u.z)*c):(o=(t.max.z-u.z)*c,a=(t.min.z-u.z)*c),i>a||o>s)||((o>i||i!==i)&&(i=o),(a<s||s!==s)&&(s=a),s<0)?null:this.at(i>=0?i:s,e)}intersectsBox(t){return this.intersectBox(t,Q)!==null}intersectTriangle(t,e,i,s,n){Ee.subVectors(e,t),Qt.subVectors(i,t),Be.crossVectors(Ee,Qt);let r=this.direction.dot(Be),o;if(r>0){if(s)return null;o=1}else if(r<0)o=-1,r=-r;else return null;ht.subVectors(this.origin,t);const a=o*this.direction.dot(Qt.crossVectors(ht,Qt));if(a<0)return null;const h=o*this.direction.dot(Ee.cross(ht));if(h<0||a+h>r)return null;const l=-o*ht.dot(Be);return l<0?null:this.at(l/r,n)}applyMatrix4(t){return this.origin.applyMatrix4(t),this.direction.transformDirection(t),this}equals(t){return t.origin.equals(this.origin)&&t.direction.equals(this.direction)}clone(){return new this.constructor().copy(this)}}class Z{constructor(t,e,i,s,n,r,o,a,h,l,c,u,d,p,f,y){Z.prototype.isMatrix4=!0,this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],t!==void 0&&this.set(t,e,i,s,n,r,o,a,h,l,c,u,d,p,f,y)}set(t,e,i,s,n,r,o,a,h,l,c,u,d,p,f,y){const g=this.elements;return g[0]=t,g[4]=e,g[8]=i,g[12]=s,g[1]=n,g[5]=r,g[9]=o,g[13]=a,g[2]=h,g[6]=l,g[10]=c,g[14]=u,g[3]=d,g[7]=p,g[11]=f,g[15]=y,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return new Z().fromArray(this.elements)}copy(t){const e=this.elements,i=t.elements;return e[0]=i[0],e[1]=i[1],e[2]=i[2],e[3]=i[3],e[4]=i[4],e[5]=i[5],e[6]=i[6],e[7]=i[7],e[8]=i[8],e[9]=i[9],e[10]=i[10],e[11]=i[11],e[12]=i[12],e[13]=i[13],e[14]=i[14],e[15]=i[15],this}copyPosition(t){const e=this.elements,i=t.elements;return e[12]=i[12],e[13]=i[13],e[14]=i[14],this}setFromMatrix3(t){const e=t.elements;return this.set(e[0],e[3],e[6],0,e[1],e[4],e[7],0,e[2],e[5],e[8],0,0,0,0,1),this}extractBasis(t,e,i){return t.setFromMatrixColumn(this,0),e.setFromMatrixColumn(this,1),i.setFromMatrixColumn(this,2),this}makeBasis(t,e,i){return this.set(t.x,e.x,i.x,0,t.y,e.y,i.y,0,t.z,e.z,i.z,0,0,0,0,1),this}extractRotation(t){const e=this.elements,i=t.elements,s=1/_t.setFromMatrixColumn(t,0).length(),n=1/_t.setFromMatrixColumn(t,1).length(),r=1/_t.setFromMatrixColumn(t,2).length();return e[0]=i[0]*s,e[1]=i[1]*s,e[2]=i[2]*s,e[3]=0,e[4]=i[4]*n,e[5]=i[5]*n,e[6]=i[6]*n,e[7]=0,e[8]=i[8]*r,e[9]=i[9]*r,e[10]=i[10]*r,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,this}makeRotationFromEuler(t){const e=this.elements,i=t.x,s=t.y,n=t.z,r=Math.cos(i),o=Math.sin(i),a=Math.cos(s),h=Math.sin(s),l=Math.cos(n),c=Math.sin(n);if(t.order==="XYZ"){const u=r*l,d=r*c,p=o*l,f=o*c;e[0]=a*l,e[4]=-a*c,e[8]=h,e[1]=d+p*h,e[5]=u-f*h,e[9]=-o*a,e[2]=f-u*h,e[6]=p+d*h,e[10]=r*a}else if(t.order==="YXZ"){const u=a*l,d=a*c,p=h*l,f=h*c;e[0]=u+f*o,e[4]=p*o-d,e[8]=r*h,e[1]=r*c,e[5]=r*l,e[9]=-o,e[2]=d*o-p,e[6]=f+u*o,e[10]=r*a}else if(t.order==="ZXY"){const u=a*l,d=a*c,p=h*l,f=h*c;e[0]=u-f*o,e[4]=-r*c,e[8]=p+d*o,e[1]=d+p*o,e[5]=r*l,e[9]=f-u*o,e[2]=-r*h,e[6]=o,e[10]=r*a}else if(t.order==="ZYX"){const u=r*l,d=r*c,p=o*l,f=o*c;e[0]=a*l,e[4]=p*h-d,e[8]=u*h+f,e[1]=a*c,e[5]=f*h+u,e[9]=d*h-p,e[2]=-h,e[6]=o*a,e[10]=r*a}else if(t.order==="YZX"){const u=r*a,d=r*h,p=o*a,f=o*h;e[0]=a*l,e[4]=f-u*c,e[8]=p*c+d,e[1]=c,e[5]=r*l,e[9]=-o*l,e[2]=-h*l,e[6]=d*c+p,e[10]=u-f*c}else if(t.order==="XZY"){const u=r*a,d=r*h,p=o*a,f=o*h;e[0]=a*l,e[4]=-c,e[8]=h*l,e[1]=u*c+f,e[5]=r*l,e[9]=d*c-p,e[2]=p*c-d,e[6]=o*l,e[10]=f*c+u}return e[3]=0,e[7]=0,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,this}makeRotationFromQuaternion(t){return this.compose(Ki,t,ts)}lookAt(t,e,i){const s=this.elements;return U.subVectors(t,e),U.lengthSq()===0&&(U.z=1),U.normalize(),lt.crossVectors(i,U),lt.lengthSq()===0&&(Math.abs(i.z)===1?U.x+=1e-4:U.z+=1e-4,U.normalize(),lt.crossVectors(i,U)),lt.normalize(),Kt.crossVectors(U,lt),s[0]=lt.x,s[4]=Kt.x,s[8]=U.x,s[1]=lt.y,s[5]=Kt.y,s[9]=U.y,s[2]=lt.z,s[6]=Kt.z,s[10]=U.z,this}multiply(t){return this.multiplyMatrices(this,t)}premultiply(t){return this.multiplyMatrices(t,this)}multiplyMatrices(t,e){const i=t.elements,s=e.elements,n=this.elements,r=i[0],o=i[4],a=i[8],h=i[12],l=i[1],c=i[5],u=i[9],d=i[13],p=i[2],f=i[6],y=i[10],g=i[14],M=i[3],A=i[7],w=i[11],z=i[15],F=s[0],b=s[4],_=s[8],T=s[12],E=s[1],B=s[5],D=s[9],C=s[13],S=s[2],I=s[6],Rt=s[10],de=s[14],pe=s[3],me=s[7],fe=s[11],ye=s[15];return n[0]=r*F+o*E+a*S+h*pe,n[4]=r*b+o*B+a*I+h*me,n[8]=r*_+o*D+a*Rt+h*fe,n[12]=r*T+o*C+a*de+h*ye,n[1]=l*F+c*E+u*S+d*pe,n[5]=l*b+c*B+u*I+d*me,n[9]=l*_+c*D+u*Rt+d*fe,n[13]=l*T+c*C+u*de+d*ye,n[2]=p*F+f*E+y*S+g*pe,n[6]=p*b+f*B+y*I+g*me,n[10]=p*_+f*D+y*Rt+g*fe,n[14]=p*T+f*C+y*de+g*ye,n[3]=M*F+A*E+w*S+z*pe,n[7]=M*b+A*B+w*I+z*me,n[11]=M*_+A*D+w*Rt+z*fe,n[15]=M*T+A*C+w*de+z*ye,this}multiplyScalar(t){const e=this.elements;return e[0]*=t,e[4]*=t,e[8]*=t,e[12]*=t,e[1]*=t,e[5]*=t,e[9]*=t,e[13]*=t,e[2]*=t,e[6]*=t,e[10]*=t,e[14]*=t,e[3]*=t,e[7]*=t,e[11]*=t,e[15]*=t,this}determinant(){const t=this.elements,e=t[0],i=t[4],s=t[8],n=t[12],r=t[1],o=t[5],a=t[9],h=t[13],l=t[2],c=t[6],u=t[10],d=t[14],p=t[3],f=t[7],y=t[11],g=t[15];return p*(+n*a*c-s*h*c-n*o*u+i*h*u+s*o*d-i*a*d)+f*(+e*a*d-e*h*u+n*r*u-s*r*d+s*h*l-n*a*l)+y*(+e*h*c-e*o*d-n*r*c+i*r*d+n*o*l-i*h*l)+g*(-s*o*l-e*a*c+e*o*u+s*r*c-i*r*u+i*a*l)}transpose(){const t=this.elements;let e;return e=t[1],t[1]=t[4],t[4]=e,e=t[2],t[2]=t[8],t[8]=e,e=t[6],t[6]=t[9],t[9]=e,e=t[3],t[3]=t[12],t[12]=e,e=t[7],t[7]=t[13],t[13]=e,e=t[11],t[11]=t[14],t[14]=e,this}setPosition(t,e,i){const s=this.elements;return t.isVector3?(s[12]=t.x,s[13]=t.y,s[14]=t.z):(s[12]=t,s[13]=e,s[14]=i),this}invert(){const t=this.elements,e=t[0],i=t[1],s=t[2],n=t[3],r=t[4],o=t[5],a=t[6],h=t[7],l=t[8],c=t[9],u=t[10],d=t[11],p=t[12],f=t[13],y=t[14],g=t[15],M=c*y*h-f*u*h+f*a*d-o*y*d-c*a*g+o*u*g,A=p*u*h-l*y*h-p*a*d+r*y*d+l*a*g-r*u*g,w=l*f*h-p*c*h+p*o*d-r*f*d-l*o*g+r*c*g,z=p*c*a-l*f*a-p*o*u+r*f*u+l*o*y-r*c*y,F=e*M+i*A+s*w+n*z;if(F===0)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const b=1/F;return t[0]=M*b,t[1]=(f*u*n-c*y*n-f*s*d+i*y*d+c*s*g-i*u*g)*b,t[2]=(o*y*n-f*a*n+f*s*h-i*y*h-o*s*g+i*a*g)*b,t[3]=(c*a*n-o*u*n-c*s*h+i*u*h+o*s*d-i*a*d)*b,t[4]=A*b,t[5]=(l*y*n-p*u*n+p*s*d-e*y*d-l*s*g+e*u*g)*b,t[6]=(p*a*n-r*y*n-p*s*h+e*y*h+r*s*g-e*a*g)*b,t[7]=(r*u*n-l*a*n+l*s*h-e*u*h-r*s*d+e*a*d)*b,t[8]=w*b,t[9]=(p*c*n-l*f*n-p*i*d+e*f*d+l*i*g-e*c*g)*b,t[10]=(r*f*n-p*o*n+p*i*h-e*f*h-r*i*g+e*o*g)*b,t[11]=(l*o*n-r*c*n-l*i*h+e*c*h+r*i*d-e*o*d)*b,t[12]=z*b,t[13]=(l*f*s-p*c*s+p*i*u-e*f*u-l*i*y+e*c*y)*b,t[14]=(p*o*s-r*f*s-p*i*a+e*f*a+r*i*y-e*o*y)*b,t[15]=(r*c*s-l*o*s+l*i*a-e*c*a-r*i*u+e*o*u)*b,this}scale(t){const e=this.elements,i=t.x,s=t.y,n=t.z;return e[0]*=i,e[4]*=s,e[8]*=n,e[1]*=i,e[5]*=s,e[9]*=n,e[2]*=i,e[6]*=s,e[10]*=n,e[3]*=i,e[7]*=s,e[11]*=n,this}getMaxScaleOnAxis(){const t=this.elements,e=t[0]*t[0]+t[1]*t[1]+t[2]*t[2],i=t[4]*t[4]+t[5]*t[5]+t[6]*t[6],s=t[8]*t[8]+t[9]*t[9]+t[10]*t[10];return Math.sqrt(Math.max(e,i,s))}makeTranslation(t,e,i){return t.isVector3?this.set(1,0,0,t.x,0,1,0,t.y,0,0,1,t.z,0,0,0,1):this.set(1,0,0,t,0,1,0,e,0,0,1,i,0,0,0,1),this}makeRotationX(t){const e=Math.cos(t),i=Math.sin(t);return this.set(1,0,0,0,0,e,-i,0,0,i,e,0,0,0,0,1),this}makeRotationY(t){const e=Math.cos(t),i=Math.sin(t);return this.set(e,0,i,0,0,1,0,0,-i,0,e,0,0,0,0,1),this}makeRotationZ(t){const e=Math.cos(t),i=Math.sin(t);return this.set(e,-i,0,0,i,e,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(t,e){const i=Math.cos(e),s=Math.sin(e),n=1-i,r=t.x,o=t.y,a=t.z,h=n*r,l=n*o;return this.set(h*r+i,h*o-s*a,h*a+s*o,0,h*o+s*a,l*o+i,l*a-s*r,0,h*a-s*o,l*a+s*r,n*a*a+i,0,0,0,0,1),this}makeScale(t,e,i){return this.set(t,0,0,0,0,e,0,0,0,0,i,0,0,0,0,1),this}makeShear(t,e,i,s,n,r){return this.set(1,i,n,0,t,1,r,0,e,s,1,0,0,0,0,1),this}compose(t,e,i){const s=this.elements,n=e._x,r=e._y,o=e._z,a=e._w,h=n+n,l=r+r,c=o+o,u=n*h,d=n*l,p=n*c,f=r*l,y=r*c,g=o*c,M=a*h,A=a*l,w=a*c,z=i.x,F=i.y,b=i.z;return s[0]=(1-(f+g))*z,s[1]=(d+w)*z,s[2]=(p-A)*z,s[3]=0,s[4]=(d-w)*F,s[5]=(1-(u+g))*F,s[6]=(y+M)*F,s[7]=0,s[8]=(p+A)*b,s[9]=(y-M)*b,s[10]=(1-(u+f))*b,s[11]=0,s[12]=t.x,s[13]=t.y,s[14]=t.z,s[15]=1,this}decompose(t,e,i){const s=this.elements;let n=_t.set(s[0],s[1],s[2]).length();const r=_t.set(s[4],s[5],s[6]).length(),o=_t.set(s[8],s[9],s[10]).length();this.determinant()<0&&(n=-n),t.x=s[12],t.y=s[13],t.z=s[14],$.copy(this);const h=1/n,l=1/r,c=1/o;return $.elements[0]*=h,$.elements[1]*=h,$.elements[2]*=h,$.elements[4]*=l,$.elements[5]*=l,$.elements[6]*=l,$.elements[8]*=c,$.elements[9]*=c,$.elements[10]*=c,e.setFromRotationMatrix($),i.x=n,i.y=r,i.z=o,this}makePerspective(t,e,i,s,n,r,o=Xt){const a=this.elements,h=2*n/(e-t),l=2*n/(i-s),c=(e+t)/(e-t),u=(i+s)/(i-s);let d,p;if(o===Xt)d=-(r+n)/(r-n),p=-2*r*n/(r-n);else if(o===ai)d=-r/(r-n),p=-r*n/(r-n);else throw new Error("THREE.Matrix4.makePerspective(): Invalid coordinate system: "+o);return a[0]=h,a[4]=0,a[8]=c,a[12]=0,a[1]=0,a[5]=l,a[9]=u,a[13]=0,a[2]=0,a[6]=0,a[10]=d,a[14]=p,a[3]=0,a[7]=0,a[11]=-1,a[15]=0,this}makeOrthographic(t,e,i,s,n,r,o=Xt){const a=this.elements,h=1/(e-t),l=1/(i-s),c=1/(r-n),u=(e+t)*h,d=(i+s)*l;let p,f;if(o===Xt)p=(r+n)*c,f=-2*c;else if(o===ai)p=n*c,f=-1*c;else throw new Error("THREE.Matrix4.makeOrthographic(): Invalid coordinate system: "+o);return a[0]=2*h,a[4]=0,a[8]=0,a[12]=-u,a[1]=0,a[5]=2*l,a[9]=0,a[13]=-d,a[2]=0,a[6]=0,a[10]=f,a[14]=-p,a[3]=0,a[7]=0,a[11]=0,a[15]=1,this}equals(t){const e=this.elements,i=t.elements;for(let s=0;s<16;s++)if(e[s]!==i[s])return!1;return!0}fromArray(t,e=0){for(let i=0;i<16;i++)this.elements[i]=t[i+e];return this}toArray(t=[],e=0){const i=this.elements;return t[e]=i[0],t[e+1]=i[1],t[e+2]=i[2],t[e+3]=i[3],t[e+4]=i[4],t[e+5]=i[5],t[e+6]=i[6],t[e+7]=i[7],t[e+8]=i[8],t[e+9]=i[9],t[e+10]=i[10],t[e+11]=i[11],t[e+12]=i[12],t[e+13]=i[13],t[e+14]=i[14],t[e+15]=i[15],t}}const _t=new x,$=new Z,Ki=new x(0,0,0),ts=new x(1,1,1),lt=new x,Kt=new x,U=new x,pi=new Z,mi=new Nt;class zt{constructor(t=0,e=0,i=0,s=zt.DEFAULT_ORDER){this.isEuler=!0,this._x=t,this._y=e,this._z=i,this._order=s}get x(){return this._x}set x(t){this._x=t,this._onChangeCallback()}get y(){return this._y}set y(t){this._y=t,this._onChangeCallback()}get z(){return this._z}set z(t){this._z=t,this._onChangeCallback()}get order(){return this._order}set order(t){this._order=t,this._onChangeCallback()}set(t,e,i,s=this._order){return this._x=t,this._y=e,this._z=i,this._order=s,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(t){return this._x=t._x,this._y=t._y,this._z=t._z,this._order=t._order,this._onChangeCallback(),this}setFromRotationMatrix(t,e=this._order,i=!0){const s=t.elements,n=s[0],r=s[4],o=s[8],a=s[1],h=s[5],l=s[9],c=s[2],u=s[6],d=s[10];switch(e){case"XYZ":this._y=Math.asin(P(o,-1,1)),Math.abs(o)<.9999999?(this._x=Math.atan2(-l,d),this._z=Math.atan2(-r,n)):(this._x=Math.atan2(u,h),this._z=0);break;case"YXZ":this._x=Math.asin(-P(l,-1,1)),Math.abs(l)<.9999999?(this._y=Math.atan2(o,d),this._z=Math.atan2(a,h)):(this._y=Math.atan2(-c,n),this._z=0);break;case"ZXY":this._x=Math.asin(P(u,-1,1)),Math.abs(u)<.9999999?(this._y=Math.atan2(-c,d),this._z=Math.atan2(-r,h)):(this._y=0,this._z=Math.atan2(a,n));break;case"ZYX":this._y=Math.asin(-P(c,-1,1)),Math.abs(c)<.9999999?(this._x=Math.atan2(u,d),this._z=Math.atan2(a,n)):(this._x=0,this._z=Math.atan2(-r,h));break;case"YZX":this._z=Math.asin(P(a,-1,1)),Math.abs(a)<.9999999?(this._x=Math.atan2(-l,h),this._y=Math.atan2(-c,n)):(this._x=0,this._y=Math.atan2(o,d));break;case"XZY":this._z=Math.asin(-P(r,-1,1)),Math.abs(r)<.9999999?(this._x=Math.atan2(u,h),this._y=Math.atan2(o,n)):(this._x=Math.atan2(-l,d),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+e)}return this._order=e,i===!0&&this._onChangeCallback(),this}setFromQuaternion(t,e,i){return pi.makeRotationFromQuaternion(t),this.setFromRotationMatrix(pi,e,i)}setFromVector3(t,e=this._order){return this.set(t.x,t.y,t.z,e)}reorder(t){return mi.setFromEuler(this),this.setFromQuaternion(mi,t)}equals(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._order===this._order}fromArray(t){return this._x=t[0],this._y=t[1],this._z=t[2],t[3]!==void 0&&(this._order=t[3]),this._onChangeCallback(),this}toArray(t=[],e=0){return t[e]=this._x,t[e+1]=this._y,t[e+2]=this._z,t[e+3]=this._order,t}_onChange(t){return this._onChangeCallback=t,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._order}}zt.DEFAULT_ORDER="XYZ";class es{constructor(){this.mask=1}set(t){this.mask=(1<<t|0)>>>0}enable(t){this.mask|=1<<t|0}enableAll(){this.mask=-1}toggle(t){this.mask^=1<<t|0}disable(t){this.mask&=~(1<<t|0)}disableAll(){this.mask=0}test(t){return(this.mask&t.mask)!==0}isEnabled(t){return(this.mask&(1<<t|0))!==0}}let is=0;const fi=new x,At=new Nt,K=new Z,te=new x,Ut=new x,ss=new x,ns=new Nt,yi=new x(1,0,0),xi=new x(0,1,0),gi=new x(0,0,1),bi={type:"added"},rs={type:"removed"},St={type:"childadded",child:null},ke={type:"childremoved",child:null};class tt extends Zt{constructor(){super(),this.isObject3D=!0,Object.defineProperty(this,"id",{value:is++}),this.uuid=It(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=tt.DEFAULT_UP.clone();const t=new x,e=new zt,i=new Nt,s=new x(1,1,1);function n(){i.setFromEuler(e,!1)}function r(){e.setFromQuaternion(i,void 0,!1)}e._onChange(n),i._onChange(r),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:t},rotation:{configurable:!0,enumerable:!0,value:e},quaternion:{configurable:!0,enumerable:!0,value:i},scale:{configurable:!0,enumerable:!0,value:s},modelViewMatrix:{value:new Z},normalMatrix:{value:new nt}}),this.matrix=new Z,this.matrixWorld=new Z,this.matrixAutoUpdate=tt.DEFAULT_MATRIX_AUTO_UPDATE,this.matrixWorldAutoUpdate=tt.DEFAULT_MATRIX_WORLD_AUTO_UPDATE,this.matrixWorldNeedsUpdate=!1,this.layers=new es,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.userData={}}onBeforeShadow(){}onAfterShadow(){}onBeforeRender(){}onAfterRender(){}applyMatrix4(t){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(t),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(t){return this.quaternion.premultiply(t),this}setRotationFromAxisAngle(t,e){this.quaternion.setFromAxisAngle(t,e)}setRotationFromEuler(t){this.quaternion.setFromEuler(t,!0)}setRotationFromMatrix(t){this.quaternion.setFromRotationMatrix(t)}setRotationFromQuaternion(t){this.quaternion.copy(t)}rotateOnAxis(t,e){return At.setFromAxisAngle(t,e),this.quaternion.multiply(At),this}rotateOnWorldAxis(t,e){return At.setFromAxisAngle(t,e),this.quaternion.premultiply(At),this}rotateX(t){return this.rotateOnAxis(yi,t)}rotateY(t){return this.rotateOnAxis(xi,t)}rotateZ(t){return this.rotateOnAxis(gi,t)}translateOnAxis(t,e){return fi.copy(t).applyQuaternion(this.quaternion),this.position.add(fi.multiplyScalar(e)),this}translateX(t){return this.translateOnAxis(yi,t)}translateY(t){return this.translateOnAxis(xi,t)}translateZ(t){return this.translateOnAxis(gi,t)}localToWorld(t){return this.updateWorldMatrix(!0,!1),t.applyMatrix4(this.matrixWorld)}worldToLocal(t){return this.updateWorldMatrix(!0,!1),t.applyMatrix4(K.copy(this.matrixWorld).invert())}lookAt(t,e,i){t.isVector3?te.copy(t):te.set(t,e,i);const s=this.parent;this.updateWorldMatrix(!0,!1),Ut.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?K.lookAt(Ut,te,this.up):K.lookAt(te,Ut,this.up),this.quaternion.setFromRotationMatrix(K),s&&(K.extractRotation(s.matrixWorld),At.setFromRotationMatrix(K),this.quaternion.premultiply(At.invert()))}add(t){if(arguments.length>1){for(let e=0;e<arguments.length;e++)this.add(arguments[e]);return this}return t===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",t),this):(t&&t.isObject3D?(t.removeFromParent(),t.parent=this,this.children.push(t),t.dispatchEvent(bi),St.child=t,this.dispatchEvent(St),St.child=null):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",t),this)}remove(t){if(arguments.length>1){for(let i=0;i<arguments.length;i++)this.remove(arguments[i]);return this}const e=this.children.indexOf(t);return e!==-1&&(t.parent=null,this.children.splice(e,1),t.dispatchEvent(rs),ke.child=t,this.dispatchEvent(ke),ke.child=null),this}removeFromParent(){const t=this.parent;return t!==null&&t.remove(this),this}clear(){return this.remove(...this.children)}attach(t){return this.updateWorldMatrix(!0,!1),K.copy(this.matrixWorld).invert(),t.parent!==null&&(t.parent.updateWorldMatrix(!0,!1),K.multiply(t.parent.matrixWorld)),t.applyMatrix4(K),t.removeFromParent(),t.parent=this,this.children.push(t),t.updateWorldMatrix(!1,!0),t.dispatchEvent(bi),St.child=t,this.dispatchEvent(St),St.child=null,this}getObjectById(t){return this.getObjectByProperty("id",t)}getObjectByName(t){return this.getObjectByProperty("name",t)}getObjectByProperty(t,e){if(this[t]===e)return this;for(let i=0,s=this.children.length;i<s;i++){const r=this.children[i].getObjectByProperty(t,e);if(r!==void 0)return r}}getObjectsByProperty(t,e,i=[]){this[t]===e&&i.push(this);const s=this.children;for(let n=0,r=s.length;n<r;n++)s[n].getObjectsByProperty(t,e,i);return i}getWorldPosition(t){return this.updateWorldMatrix(!0,!1),t.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(t){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(Ut,t,ss),t}getWorldScale(t){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(Ut,ns,t),t}getWorldDirection(t){this.updateWorldMatrix(!0,!1);const e=this.matrixWorld.elements;return t.set(e[8],e[9],e[10]).normalize()}raycast(){}traverse(t){t(this);const e=this.children;for(let i=0,s=e.length;i<s;i++)e[i].traverse(t)}traverseVisible(t){if(this.visible===!1)return;t(this);const e=this.children;for(let i=0,s=e.length;i<s;i++)e[i].traverseVisible(t)}traverseAncestors(t){const e=this.parent;e!==null&&(t(e),e.traverseAncestors(t))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(t){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||t)&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,t=!0);const e=this.children;for(let i=0,s=e.length;i<s;i++){const n=e[i];(n.matrixWorldAutoUpdate===!0||t===!0)&&n.updateMatrixWorld(t)}}updateWorldMatrix(t,e){const i=this.parent;if(t===!0&&i!==null&&i.matrixWorldAutoUpdate===!0&&i.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),e===!0){const s=this.children;for(let n=0,r=s.length;n<r;n++){const o=s[n];o.matrixWorldAutoUpdate===!0&&o.updateWorldMatrix(!1,!0)}}}toJSON(t){const e=t===void 0||typeof t=="string",i={};e&&(t={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{},nodes:{}},i.metadata={version:4.6,type:"Object",generator:"Object3D.toJSON"});const s={};s.uuid=this.uuid,s.type=this.type,this.name!==""&&(s.name=this.name),this.castShadow===!0&&(s.castShadow=!0),this.receiveShadow===!0&&(s.receiveShadow=!0),this.visible===!1&&(s.visible=!1),this.frustumCulled===!1&&(s.frustumCulled=!1),this.renderOrder!==0&&(s.renderOrder=this.renderOrder),Object.keys(this.userData).length>0&&(s.userData=this.userData),s.layers=this.layers.mask,s.matrix=this.matrix.toArray(),s.up=this.up.toArray(),this.matrixAutoUpdate===!1&&(s.matrixAutoUpdate=!1),this.isInstancedMesh&&(s.type="InstancedMesh",s.count=this.count,s.instanceMatrix=this.instanceMatrix.toJSON(),this.instanceColor!==null&&(s.instanceColor=this.instanceColor.toJSON())),this.isBatchedMesh&&(s.type="BatchedMesh",s.perObjectFrustumCulled=this.perObjectFrustumCulled,s.sortObjects=this.sortObjects,s.drawRanges=this._drawRanges,s.reservedRanges=this._reservedRanges,s.visibility=this._visibility,s.active=this._active,s.bounds=this._bounds.map(o=>({boxInitialized:o.boxInitialized,boxMin:o.box.min.toArray(),boxMax:o.box.max.toArray(),sphereInitialized:o.sphereInitialized,sphereRadius:o.sphere.radius,sphereCenter:o.sphere.center.toArray()})),s.maxGeometryCount=this._maxGeometryCount,s.maxVertexCount=this._maxVertexCount,s.maxIndexCount=this._maxIndexCount,s.geometryInitialized=this._geometryInitialized,s.geometryCount=this._geometryCount,s.matricesTexture=this._matricesTexture.toJSON(t),this.boundingSphere!==null&&(s.boundingSphere={center:s.boundingSphere.center.toArray(),radius:s.boundingSphere.radius}),this.boundingBox!==null&&(s.boundingBox={min:s.boundingBox.min.toArray(),max:s.boundingBox.max.toArray()}));function n(o,a){return o[a.uuid]===void 0&&(o[a.uuid]=a.toJSON(t)),a.uuid}if(this.isScene)this.background&&(this.background.isColor?s.background=this.background.toJSON():this.background.isTexture&&(s.background=this.background.toJSON(t).uuid)),this.environment&&this.environment.isTexture&&this.environment.isRenderTargetTexture!==!0&&(s.environment=this.environment.toJSON(t).uuid);else if(this.isMesh||this.isLine||this.isPoints){s.geometry=n(t.geometries,this.geometry);const o=this.geometry.parameters;if(o!==void 0&&o.shapes!==void 0){const a=o.shapes;if(Array.isArray(a))for(let h=0,l=a.length;h<l;h++){const c=a[h];n(t.shapes,c)}else n(t.shapes,a)}}if(this.isSkinnedMesh&&(s.bindMode=this.bindMode,s.bindMatrix=this.bindMatrix.toArray(),this.skeleton!==void 0&&(n(t.skeletons,this.skeleton),s.skeleton=this.skeleton.uuid)),this.material!==void 0)if(Array.isArray(this.material)){const o=[];for(let a=0,h=this.material.length;a<h;a++)o.push(n(t.materials,this.material[a]));s.material=o}else s.material=n(t.materials,this.material);if(this.children.length>0){s.children=[];for(let o=0;o<this.children.length;o++)s.children.push(this.children[o].toJSON(t).object)}if(this.animations.length>0){s.animations=[];for(let o=0;o<this.animations.length;o++){const a=this.animations[o];s.animations.push(n(t.animations,a))}}if(e){const o=r(t.geometries),a=r(t.materials),h=r(t.textures),l=r(t.images),c=r(t.shapes),u=r(t.skeletons),d=r(t.animations),p=r(t.nodes);o.length>0&&(i.geometries=o),a.length>0&&(i.materials=a),h.length>0&&(i.textures=h),l.length>0&&(i.images=l),c.length>0&&(i.shapes=c),u.length>0&&(i.skeletons=u),d.length>0&&(i.animations=d),p.length>0&&(i.nodes=p)}return i.object=s,i;function r(o){const a=[];for(const h in o){const l=o[h];delete l.metadata,a.push(l)}return a}}clone(t){return new this.constructor().copy(this,t)}copy(t,e=!0){if(this.name=t.name,this.up.copy(t.up),this.position.copy(t.position),this.rotation.order=t.rotation.order,this.quaternion.copy(t.quaternion),this.scale.copy(t.scale),this.matrix.copy(t.matrix),this.matrixWorld.copy(t.matrixWorld),this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrixWorldAutoUpdate=t.matrixWorldAutoUpdate,this.matrixWorldNeedsUpdate=t.matrixWorldNeedsUpdate,this.layers.mask=t.layers.mask,this.visible=t.visible,this.castShadow=t.castShadow,this.receiveShadow=t.receiveShadow,this.frustumCulled=t.frustumCulled,this.renderOrder=t.renderOrder,this.animations=t.animations.slice(),this.userData=JSON.parse(JSON.stringify(t.userData)),e===!0)for(let i=0;i<t.children.length;i++){const s=t.children[i];this.add(s.clone())}return this}}tt.DEFAULT_UP=new x(0,1,0),tt.DEFAULT_MATRIX_AUTO_UPDATE=!0,tt.DEFAULT_MATRIX_WORLD_AUTO_UPDATE=!0;const G=new x,et=new x,Re=new x,it=new x,Ft=new x,Ct=new x,Mi=new x,De=new x,Ie=new x,ve=new x;class Y{constructor(t=new x,e=new x,i=new x){this.a=t,this.b=e,this.c=i}static getNormal(t,e,i,s){s.subVectors(i,e),G.subVectors(t,e),s.cross(G);const n=s.lengthSq();return n>0?s.multiplyScalar(1/Math.sqrt(n)):s.set(0,0,0)}static getBarycoord(t,e,i,s,n){G.subVectors(s,e),et.subVectors(i,e),Re.subVectors(t,e);const r=G.dot(G),o=G.dot(et),a=G.dot(Re),h=et.dot(et),l=et.dot(Re),c=r*h-o*o;if(c===0)return n.set(0,0,0),null;const u=1/c,d=(h*a-o*l)*u,p=(r*l-o*a)*u;return n.set(1-d-p,p,d)}static containsPoint(t,e,i,s){return this.getBarycoord(t,e,i,s,it)===null?!1:it.x>=0&&it.y>=0&&it.x+it.y<=1}static getInterpolation(t,e,i,s,n,r,o,a){return this.getBarycoord(t,e,i,s,it)===null?(a.x=0,a.y=0,"z"in a&&(a.z=0),"w"in a&&(a.w=0),null):(a.setScalar(0),a.addScaledVector(n,it.x),a.addScaledVector(r,it.y),a.addScaledVector(o,it.z),a)}static isFrontFacing(t,e,i,s){return G.subVectors(i,e),et.subVectors(t,e),G.cross(et).dot(s)<0}set(t,e,i){return this.a.copy(t),this.b.copy(e),this.c.copy(i),this}setFromPointsAndIndices(t,e,i,s){return this.a.copy(t[e]),this.b.copy(t[i]),this.c.copy(t[s]),this}setFromAttributeAndIndices(t,e,i,s){return this.a.fromBufferAttribute(t,e),this.b.fromBufferAttribute(t,i),this.c.fromBufferAttribute(t,s),this}clone(){return new this.constructor().copy(this)}copy(t){return this.a.copy(t.a),this.b.copy(t.b),this.c.copy(t.c),this}getArea(){return G.subVectors(this.c,this.b),et.subVectors(this.a,this.b),G.cross(et).length()*.5}getMidpoint(t){return t.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(t){return Y.getNormal(this.a,this.b,this.c,t)}getPlane(t){return t.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(t,e){return Y.getBarycoord(t,this.a,this.b,this.c,e)}getInterpolation(t,e,i,s,n){return Y.getInterpolation(t,this.a,this.b,this.c,e,i,s,n)}containsPoint(t){return Y.containsPoint(t,this.a,this.b,this.c)}isFrontFacing(t){return Y.isFrontFacing(this.a,this.b,this.c,t)}intersectsBox(t){return t.intersectsTriangle(this)}closestPointToPoint(t,e){const i=this.a,s=this.b,n=this.c;let r,o;Ft.subVectors(s,i),Ct.subVectors(n,i),De.subVectors(t,i);const a=Ft.dot(De),h=Ct.dot(De);if(a<=0&&h<=0)return e.copy(i);Ie.subVectors(t,s);const l=Ft.dot(Ie),c=Ct.dot(Ie);if(l>=0&&c<=l)return e.copy(s);const u=a*c-l*h;if(u<=0&&a>=0&&l<=0)return r=a/(a-l),e.copy(i).addScaledVector(Ft,r);ve.subVectors(t,n);const d=Ft.dot(ve),p=Ct.dot(ve);if(p>=0&&d<=p)return e.copy(n);const f=d*h-a*p;if(f<=0&&h>=0&&p<=0)return o=h/(h-p),e.copy(i).addScaledVector(Ct,o);const y=l*p-d*c;if(y<=0&&c-l>=0&&d-p>=0)return Mi.subVectors(n,s),o=(c-l)/(c-l+(d-p)),e.copy(s).addScaledVector(Mi,o);const g=1/(y+f+u);return r=f*g,o=u*g,e.copy(i).addScaledVector(Ft,r).addScaledVector(Ct,o)}equals(t){return t.a.equals(this.a)&&t.b.equals(this.b)&&t.c.equals(this.c)}}const wi={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},ct={h:0,s:0,l:0},ee={h:0,s:0,l:0};function Ne(m,t,e){return e<0&&(e+=1),e>1&&(e-=1),e<1/6?m+(t-m)*6*e:e<1/2?t:e<2/3?m+(t-m)*6*(2/3-e):m}class q{constructor(t,e,i){return this.isColor=!0,this.r=1,this.g=1,this.b=1,this.set(t,e,i)}set(t,e,i){if(e===void 0&&i===void 0){const s=t;s&&s.isColor?this.copy(s):typeof s=="number"?this.setHex(s):typeof s=="string"&&this.setStyle(s)}else this.setRGB(t,e,i);return this}setScalar(t){return this.r=t,this.g=t,this.b=t,this}setHex(t,e=st){return t=Math.floor(t),this.r=(t>>16&255)/255,this.g=(t>>8&255)/255,this.b=(t&255)/255,W.toWorkingColorSpace(this,e),this}setRGB(t,e,i,s=W.workingColorSpace){return this.r=t,this.g=e,this.b=i,W.toWorkingColorSpace(this,s),this}setHSL(t,e,i,s=W.workingColorSpace){if(t=Li(t,1),e=P(e,0,1),i=P(i,0,1),e===0)this.r=this.g=this.b=i;else{const n=i<=.5?i*(1+e):i+e-i*e,r=2*i-n;this.r=Ne(r,n,t+1/3),this.g=Ne(r,n,t),this.b=Ne(r,n,t-1/3)}return W.toWorkingColorSpace(this,s),this}setStyle(t,e=st){function i(n){n!==void 0&&parseFloat(n)<1&&console.warn("THREE.Color: Alpha component of "+t+" will be ignored.")}let s;if(s=/^(\w+)\(([^\)]*)\)/.exec(t)){let n;const r=s[1],o=s[2];switch(r){case"rgb":case"rgba":if(n=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(o))return i(n[4]),this.setRGB(Math.min(255,parseInt(n[1],10))/255,Math.min(255,parseInt(n[2],10))/255,Math.min(255,parseInt(n[3],10))/255,e);if(n=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(o))return i(n[4]),this.setRGB(Math.min(100,parseInt(n[1],10))/100,Math.min(100,parseInt(n[2],10))/100,Math.min(100,parseInt(n[3],10))/100,e);break;case"hsl":case"hsla":if(n=/^\s*(\d*\.?\d+)\s*,\s*(\d*\.?\d+)\%\s*,\s*(\d*\.?\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(o))return i(n[4]),this.setHSL(parseFloat(n[1])/360,parseFloat(n[2])/100,parseFloat(n[3])/100,e);break;default:console.warn("THREE.Color: Unknown color model "+t)}}else if(s=/^\#([A-Fa-f\d]+)$/.exec(t)){const n=s[1],r=n.length;if(r===3)return this.setRGB(parseInt(n.charAt(0),16)/15,parseInt(n.charAt(1),16)/15,parseInt(n.charAt(2),16)/15,e);if(r===6)return this.setHex(parseInt(n,16),e);console.warn("THREE.Color: Invalid hex color "+t)}else if(t&&t.length>0)return this.setColorName(t,e);return this}setColorName(t,e=st){const i=wi[t.toLowerCase()];return i!==void 0?this.setHex(i,e):console.warn("THREE.Color: Unknown color "+t),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(t){return this.r=t.r,this.g=t.g,this.b=t.b,this}copySRGBToLinear(t){return this.r=xt(t.r),this.g=xt(t.g),this.b=xt(t.b),this}copyLinearToSRGB(t){return this.r=ze(t.r),this.g=ze(t.g),this.b=ze(t.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(t=st){return W.fromWorkingColorSpace(N.copy(this),t),Math.round(P(N.r*255,0,255))*65536+Math.round(P(N.g*255,0,255))*256+Math.round(P(N.b*255,0,255))}getHexString(t=st){return("000000"+this.getHex(t).toString(16)).slice(-6)}getHSL(t,e=W.workingColorSpace){W.fromWorkingColorSpace(N.copy(this),e);const i=N.r,s=N.g,n=N.b,r=Math.max(i,s,n),o=Math.min(i,s,n);let a,h;const l=(o+r)/2;if(o===r)a=0,h=0;else{const c=r-o;switch(h=l<=.5?c/(r+o):c/(2-r-o),r){case i:a=(s-n)/c+(s<n?6:0);break;case s:a=(n-i)/c+2;break;case n:a=(i-s)/c+4;break}a/=6}return t.h=a,t.s=h,t.l=l,t}getRGB(t,e=W.workingColorSpace){return W.fromWorkingColorSpace(N.copy(this),e),t.r=N.r,t.g=N.g,t.b=N.b,t}getStyle(t=st){W.fromWorkingColorSpace(N.copy(this),t);const e=N.r,i=N.g,s=N.b;return t!==st?`color(${t} ${e.toFixed(3)} ${i.toFixed(3)} ${s.toFixed(3)})`:`rgb(${Math.round(e*255)},${Math.round(i*255)},${Math.round(s*255)})`}offsetHSL(t,e,i){return this.getHSL(ct),this.setHSL(ct.h+t,ct.s+e,ct.l+i)}add(t){return this.r+=t.r,this.g+=t.g,this.b+=t.b,this}addColors(t,e){return this.r=t.r+e.r,this.g=t.g+e.g,this.b=t.b+e.b,this}addScalar(t){return this.r+=t,this.g+=t,this.b+=t,this}sub(t){return this.r=Math.max(0,this.r-t.r),this.g=Math.max(0,this.g-t.g),this.b=Math.max(0,this.b-t.b),this}multiply(t){return this.r*=t.r,this.g*=t.g,this.b*=t.b,this}multiplyScalar(t){return this.r*=t,this.g*=t,this.b*=t,this}lerp(t,e){return this.r+=(t.r-this.r)*e,this.g+=(t.g-this.g)*e,this.b+=(t.b-this.b)*e,this}lerpColors(t,e,i){return this.r=t.r+(e.r-t.r)*i,this.g=t.g+(e.g-t.g)*i,this.b=t.b+(e.b-t.b)*i,this}lerpHSL(t,e){this.getHSL(ct),t.getHSL(ee);const i=we(ct.h,ee.h,e),s=we(ct.s,ee.s,e),n=we(ct.l,ee.l,e);return this.setHSL(i,s,n),this}setFromVector3(t){return this.r=t.x,this.g=t.y,this.b=t.z,this}applyMatrix3(t){const e=this.r,i=this.g,s=this.b,n=t.elements;return this.r=n[0]*e+n[3]*i+n[6]*s,this.g=n[1]*e+n[4]*i+n[7]*s,this.b=n[2]*e+n[5]*i+n[8]*s,this}equals(t){return t.r===this.r&&t.g===this.g&&t.b===this.b}fromArray(t,e=0){return this.r=t[e],this.g=t[e+1],this.b=t[e+2],this}toArray(t=[],e=0){return t[e]=this.r,t[e+1]=this.g,t[e+2]=this.b,t}fromBufferAttribute(t,e){return this.r=t.getX(e),this.g=t.getY(e),this.b=t.getZ(e),this}toJSON(){return this.getHex()}*[Symbol.iterator](){yield this.r,yield this.g,yield this.b}}const N=new q;q.NAMES=wi;let as=0;class _i extends Zt{constructor(){super(),this.isMaterial=!0,Object.defineProperty(this,"id",{value:as++}),this.uuid=It(),this.name="",this.type="Material",this.blending=Le,this.side=xe,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.alphaHash=!1,this.blendSrc=Xe,this.blendDst=Ze,this.blendEquation=We,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.blendColor=new q(0,0,0),this.blendAlpha=0,this.depthFunc=$e,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=ni,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=yt,this.stencilZFail=yt,this.stencilZPass=yt,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.forceSinglePass=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0,this._alphaTest=0}get alphaTest(){return this._alphaTest}set alphaTest(t){this._alphaTest>0!=t>0&&this.version++,this._alphaTest=t}onBuild(){}onBeforeRender(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(t){if(t!==void 0)for(const e in t){const i=t[e];if(i===void 0){console.warn(`THREE.Material: parameter '${e}' has value of undefined.`);continue}const s=this[e];if(s===void 0){console.warn(`THREE.Material: '${e}' is not a property of THREE.${this.type}.`);continue}s&&s.isColor?s.set(i):s&&s.isVector3&&i&&i.isVector3?s.copy(i):this[e]=i}}toJSON(t){const e=t===void 0||typeof t=="string";e&&(t={textures:{},images:{}});const i={metadata:{version:4.6,type:"Material",generator:"Material.toJSON"}};i.uuid=this.uuid,i.type=this.type,this.name!==""&&(i.name=this.name),this.color&&this.color.isColor&&(i.color=this.color.getHex()),this.roughness!==void 0&&(i.roughness=this.roughness),this.metalness!==void 0&&(i.metalness=this.metalness),this.sheen!==void 0&&(i.sheen=this.sheen),this.sheenColor&&this.sheenColor.isColor&&(i.sheenColor=this.sheenColor.getHex()),this.sheenRoughness!==void 0&&(i.sheenRoughness=this.sheenRoughness),this.emissive&&this.emissive.isColor&&(i.emissive=this.emissive.getHex()),this.emissiveIntensity!==void 0&&this.emissiveIntensity!==1&&(i.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(i.specular=this.specular.getHex()),this.specularIntensity!==void 0&&(i.specularIntensity=this.specularIntensity),this.specularColor&&this.specularColor.isColor&&(i.specularColor=this.specularColor.getHex()),this.shininess!==void 0&&(i.shininess=this.shininess),this.clearcoat!==void 0&&(i.clearcoat=this.clearcoat),this.clearcoatRoughness!==void 0&&(i.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(i.clearcoatMap=this.clearcoatMap.toJSON(t).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(i.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(t).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(i.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(t).uuid,i.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.dispersion!==void 0&&(i.dispersion=this.dispersion),this.iridescence!==void 0&&(i.iridescence=this.iridescence),this.iridescenceIOR!==void 0&&(i.iridescenceIOR=this.iridescenceIOR),this.iridescenceThicknessRange!==void 0&&(i.iridescenceThicknessRange=this.iridescenceThicknessRange),this.iridescenceMap&&this.iridescenceMap.isTexture&&(i.iridescenceMap=this.iridescenceMap.toJSON(t).uuid),this.iridescenceThicknessMap&&this.iridescenceThicknessMap.isTexture&&(i.iridescenceThicknessMap=this.iridescenceThicknessMap.toJSON(t).uuid),this.anisotropy!==void 0&&(i.anisotropy=this.anisotropy),this.anisotropyRotation!==void 0&&(i.anisotropyRotation=this.anisotropyRotation),this.anisotropyMap&&this.anisotropyMap.isTexture&&(i.anisotropyMap=this.anisotropyMap.toJSON(t).uuid),this.map&&this.map.isTexture&&(i.map=this.map.toJSON(t).uuid),this.matcap&&this.matcap.isTexture&&(i.matcap=this.matcap.toJSON(t).uuid),this.alphaMap&&this.alphaMap.isTexture&&(i.alphaMap=this.alphaMap.toJSON(t).uuid),this.lightMap&&this.lightMap.isTexture&&(i.lightMap=this.lightMap.toJSON(t).uuid,i.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(i.aoMap=this.aoMap.toJSON(t).uuid,i.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(i.bumpMap=this.bumpMap.toJSON(t).uuid,i.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(i.normalMap=this.normalMap.toJSON(t).uuid,i.normalMapType=this.normalMapType,i.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(i.displacementMap=this.displacementMap.toJSON(t).uuid,i.displacementScale=this.displacementScale,i.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(i.roughnessMap=this.roughnessMap.toJSON(t).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(i.metalnessMap=this.metalnessMap.toJSON(t).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(i.emissiveMap=this.emissiveMap.toJSON(t).uuid),this.specularMap&&this.specularMap.isTexture&&(i.specularMap=this.specularMap.toJSON(t).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(i.specularIntensityMap=this.specularIntensityMap.toJSON(t).uuid),this.specularColorMap&&this.specularColorMap.isTexture&&(i.specularColorMap=this.specularColorMap.toJSON(t).uuid),this.envMap&&this.envMap.isTexture&&(i.envMap=this.envMap.toJSON(t).uuid,this.combine!==void 0&&(i.combine=this.combine)),this.envMapRotation!==void 0&&(i.envMapRotation=this.envMapRotation.toArray()),this.envMapIntensity!==void 0&&(i.envMapIntensity=this.envMapIntensity),this.reflectivity!==void 0&&(i.reflectivity=this.reflectivity),this.refractionRatio!==void 0&&(i.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(i.gradientMap=this.gradientMap.toJSON(t).uuid),this.transmission!==void 0&&(i.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(i.transmissionMap=this.transmissionMap.toJSON(t).uuid),this.thickness!==void 0&&(i.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(i.thicknessMap=this.thicknessMap.toJSON(t).uuid),this.attenuationDistance!==void 0&&this.attenuationDistance!==1/0&&(i.attenuationDistance=this.attenuationDistance),this.attenuationColor!==void 0&&(i.attenuationColor=this.attenuationColor.getHex()),this.size!==void 0&&(i.size=this.size),this.shadowSide!==null&&(i.shadowSide=this.shadowSide),this.sizeAttenuation!==void 0&&(i.sizeAttenuation=this.sizeAttenuation),this.blending!==Le&&(i.blending=this.blending),this.side!==xe&&(i.side=this.side),this.vertexColors===!0&&(i.vertexColors=!0),this.opacity<1&&(i.opacity=this.opacity),this.transparent===!0&&(i.transparent=!0),this.blendSrc!==Xe&&(i.blendSrc=this.blendSrc),this.blendDst!==Ze&&(i.blendDst=this.blendDst),this.blendEquation!==We&&(i.blendEquation=this.blendEquation),this.blendSrcAlpha!==null&&(i.blendSrcAlpha=this.blendSrcAlpha),this.blendDstAlpha!==null&&(i.blendDstAlpha=this.blendDstAlpha),this.blendEquationAlpha!==null&&(i.blendEquationAlpha=this.blendEquationAlpha),this.blendColor&&this.blendColor.isColor&&(i.blendColor=this.blendColor.getHex()),this.blendAlpha!==0&&(i.blendAlpha=this.blendAlpha),this.depthFunc!==$e&&(i.depthFunc=this.depthFunc),this.depthTest===!1&&(i.depthTest=this.depthTest),this.depthWrite===!1&&(i.depthWrite=this.depthWrite),this.colorWrite===!1&&(i.colorWrite=this.colorWrite),this.stencilWriteMask!==255&&(i.stencilWriteMask=this.stencilWriteMask),this.stencilFunc!==ni&&(i.stencilFunc=this.stencilFunc),this.stencilRef!==0&&(i.stencilRef=this.stencilRef),this.stencilFuncMask!==255&&(i.stencilFuncMask=this.stencilFuncMask),this.stencilFail!==yt&&(i.stencilFail=this.stencilFail),this.stencilZFail!==yt&&(i.stencilZFail=this.stencilZFail),this.stencilZPass!==yt&&(i.stencilZPass=this.stencilZPass),this.stencilWrite===!0&&(i.stencilWrite=this.stencilWrite),this.rotation!==void 0&&this.rotation!==0&&(i.rotation=this.rotation),this.polygonOffset===!0&&(i.polygonOffset=!0),this.polygonOffsetFactor!==0&&(i.polygonOffsetFactor=this.polygonOffsetFactor),this.polygonOffsetUnits!==0&&(i.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth!==void 0&&this.linewidth!==1&&(i.linewidth=this.linewidth),this.dashSize!==void 0&&(i.dashSize=this.dashSize),this.gapSize!==void 0&&(i.gapSize=this.gapSize),this.scale!==void 0&&(i.scale=this.scale),this.dithering===!0&&(i.dithering=!0),this.alphaTest>0&&(i.alphaTest=this.alphaTest),this.alphaHash===!0&&(i.alphaHash=!0),this.alphaToCoverage===!0&&(i.alphaToCoverage=!0),this.premultipliedAlpha===!0&&(i.premultipliedAlpha=!0),this.forceSinglePass===!0&&(i.forceSinglePass=!0),this.wireframe===!0&&(i.wireframe=!0),this.wireframeLinewidth>1&&(i.wireframeLinewidth=this.wireframeLinewidth),this.wireframeLinecap!=="round"&&(i.wireframeLinecap=this.wireframeLinecap),this.wireframeLinejoin!=="round"&&(i.wireframeLinejoin=this.wireframeLinejoin),this.flatShading===!0&&(i.flatShading=!0),this.visible===!1&&(i.visible=!1),this.toneMapped===!1&&(i.toneMapped=!1),this.fog===!1&&(i.fog=!1),Object.keys(this.userData).length>0&&(i.userData=this.userData);function s(n){const r=[];for(const o in n){const a=n[o];delete a.metadata,r.push(a)}return r}if(e){const n=s(t.textures),r=s(t.images);n.length>0&&(i.textures=n),r.length>0&&(i.images=r)}return i}clone(){return new this.constructor().copy(this)}copy(t){this.name=t.name,this.blending=t.blending,this.side=t.side,this.vertexColors=t.vertexColors,this.opacity=t.opacity,this.transparent=t.transparent,this.blendSrc=t.blendSrc,this.blendDst=t.blendDst,this.blendEquation=t.blendEquation,this.blendSrcAlpha=t.blendSrcAlpha,this.blendDstAlpha=t.blendDstAlpha,this.blendEquationAlpha=t.blendEquationAlpha,this.blendColor.copy(t.blendColor),this.blendAlpha=t.blendAlpha,this.depthFunc=t.depthFunc,this.depthTest=t.depthTest,this.depthWrite=t.depthWrite,this.stencilWriteMask=t.stencilWriteMask,this.stencilFunc=t.stencilFunc,this.stencilRef=t.stencilRef,this.stencilFuncMask=t.stencilFuncMask,this.stencilFail=t.stencilFail,this.stencilZFail=t.stencilZFail,this.stencilZPass=t.stencilZPass,this.stencilWrite=t.stencilWrite;const e=t.clippingPlanes;let i=null;if(e!==null){const s=e.length;i=new Array(s);for(let n=0;n!==s;++n)i[n]=e[n].clone()}return this.clippingPlanes=i,this.clipIntersection=t.clipIntersection,this.clipShadows=t.clipShadows,this.shadowSide=t.shadowSide,this.colorWrite=t.colorWrite,this.precision=t.precision,this.polygonOffset=t.polygonOffset,this.polygonOffsetFactor=t.polygonOffsetFactor,this.polygonOffsetUnits=t.polygonOffsetUnits,this.dithering=t.dithering,this.alphaTest=t.alphaTest,this.alphaHash=t.alphaHash,this.alphaToCoverage=t.alphaToCoverage,this.premultipliedAlpha=t.premultipliedAlpha,this.forceSinglePass=t.forceSinglePass,this.visible=t.visible,this.toneMapped=t.toneMapped,this.userData=JSON.parse(JSON.stringify(t.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(t){t===!0&&this.version++}}class os extends _i{constructor(t){super(),this.isMeshBasicMaterial=!0,this.type="MeshBasicMaterial",this.color=new q(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new zt,this.combine=Ri,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.envMapRotation.copy(t.envMapRotation),this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.fog=t.fog,this}}const k=new x,ie=new O;class mt{constructor(t,e,i=!1){if(Array.isArray(t))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.isBufferAttribute=!0,this.name="",this.array=t,this.itemSize=e,this.count=t!==void 0?t.length/e:0,this.normalized=i,this.usage=ri,this._updateRange={offset:0,count:-1},this.updateRanges=[],this.gpuType=Oi,this.version=0}onUploadCallback(){}set needsUpdate(t){t===!0&&this.version++}get updateRange(){return Xi("THREE.BufferAttribute: updateRange() is deprecated and will be removed in r169. Use addUpdateRange() instead."),this._updateRange}setUsage(t){return this.usage=t,this}addUpdateRange(t,e){this.updateRanges.push({start:t,count:e})}clearUpdateRanges(){this.updateRanges.length=0}copy(t){return this.name=t.name,this.array=new t.array.constructor(t.array),this.itemSize=t.itemSize,this.count=t.count,this.normalized=t.normalized,this.usage=t.usage,this.gpuType=t.gpuType,this}copyAt(t,e,i){t*=this.itemSize,i*=e.itemSize;for(let s=0,n=this.itemSize;s<n;s++)this.array[t+s]=e.array[i+s];return this}copyArray(t){return this.array.set(t),this}applyMatrix3(t){if(this.itemSize===2)for(let e=0,i=this.count;e<i;e++)ie.fromBufferAttribute(this,e),ie.applyMatrix3(t),this.setXY(e,ie.x,ie.y);else if(this.itemSize===3)for(let e=0,i=this.count;e<i;e++)k.fromBufferAttribute(this,e),k.applyMatrix3(t),this.setXYZ(e,k.x,k.y,k.z);return this}applyMatrix4(t){for(let e=0,i=this.count;e<i;e++)k.fromBufferAttribute(this,e),k.applyMatrix4(t),this.setXYZ(e,k.x,k.y,k.z);return this}applyNormalMatrix(t){for(let e=0,i=this.count;e<i;e++)k.fromBufferAttribute(this,e),k.applyNormalMatrix(t),this.setXYZ(e,k.x,k.y,k.z);return this}transformDirection(t){for(let e=0,i=this.count;e<i;e++)k.fromBufferAttribute(this,e),k.transformDirection(t),this.setXYZ(e,k.x,k.y,k.z);return this}set(t,e=0){return this.array.set(t,e),this}getComponent(t,e){let i=this.array[t*this.itemSize+e];return this.normalized&&(i=vt(i,this.array)),i}setComponent(t,e,i){return this.normalized&&(i=V(i,this.array)),this.array[t*this.itemSize+e]=i,this}getX(t){let e=this.array[t*this.itemSize];return this.normalized&&(e=vt(e,this.array)),e}setX(t,e){return this.normalized&&(e=V(e,this.array)),this.array[t*this.itemSize]=e,this}getY(t){let e=this.array[t*this.itemSize+1];return this.normalized&&(e=vt(e,this.array)),e}setY(t,e){return this.normalized&&(e=V(e,this.array)),this.array[t*this.itemSize+1]=e,this}getZ(t){let e=this.array[t*this.itemSize+2];return this.normalized&&(e=vt(e,this.array)),e}setZ(t,e){return this.normalized&&(e=V(e,this.array)),this.array[t*this.itemSize+2]=e,this}getW(t){let e=this.array[t*this.itemSize+3];return this.normalized&&(e=vt(e,this.array)),e}setW(t,e){return this.normalized&&(e=V(e,this.array)),this.array[t*this.itemSize+3]=e,this}setXY(t,e,i){return t*=this.itemSize,this.normalized&&(e=V(e,this.array),i=V(i,this.array)),this.array[t+0]=e,this.array[t+1]=i,this}setXYZ(t,e,i,s){return t*=this.itemSize,this.normalized&&(e=V(e,this.array),i=V(i,this.array),s=V(s,this.array)),this.array[t+0]=e,this.array[t+1]=i,this.array[t+2]=s,this}setXYZW(t,e,i,s,n){return t*=this.itemSize,this.normalized&&(e=V(e,this.array),i=V(i,this.array),s=V(s,this.array),n=V(n,this.array)),this.array[t+0]=e,this.array[t+1]=i,this.array[t+2]=s,this.array[t+3]=n,this}onUpload(t){return this.onUploadCallback=t,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){const t={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.from(this.array),normalized:this.normalized};return this.name!==""&&(t.name=this.name),this.usage!==ri&&(t.usage=this.usage),t}}class hs extends mt{constructor(t,e,i){super(new Uint16Array(t),e,i)}}class ls extends mt{constructor(t,e,i){super(new Uint32Array(t),e,i)}}class qt extends mt{constructor(t,e,i){super(new Float32Array(t),e,i)}}let cs=0;const L=new Z,Oe=new tt,Tt=new x,H=new Ot,Ht=new Ot,R=new x;class Lt extends Zt{constructor(){super(),this.isBufferGeometry=!0,Object.defineProperty(this,"id",{value:cs++}),this.uuid=It(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(t){return Array.isArray(t)?this.index=new(Wi(t)?ls:hs)(t,1):this.index=t,this}getAttribute(t){return this.attributes[t]}setAttribute(t,e){return this.attributes[t]=e,this}deleteAttribute(t){return delete this.attributes[t],this}hasAttribute(t){return this.attributes[t]!==void 0}addGroup(t,e,i=0){this.groups.push({start:t,count:e,materialIndex:i})}clearGroups(){this.groups=[]}setDrawRange(t,e){this.drawRange.start=t,this.drawRange.count=e}applyMatrix4(t){const e=this.attributes.position;e!==void 0&&(e.applyMatrix4(t),e.needsUpdate=!0);const i=this.attributes.normal;if(i!==void 0){const n=new nt().getNormalMatrix(t);i.applyNormalMatrix(n),i.needsUpdate=!0}const s=this.attributes.tangent;return s!==void 0&&(s.transformDirection(t),s.needsUpdate=!0),this.boundingBox!==null&&this.computeBoundingBox(),this.boundingSphere!==null&&this.computeBoundingSphere(),this}applyQuaternion(t){return L.makeRotationFromQuaternion(t),this.applyMatrix4(L),this}rotateX(t){return L.makeRotationX(t),this.applyMatrix4(L),this}rotateY(t){return L.makeRotationY(t),this.applyMatrix4(L),this}rotateZ(t){return L.makeRotationZ(t),this.applyMatrix4(L),this}translate(t,e,i){return L.makeTranslation(t,e,i),this.applyMatrix4(L),this}scale(t,e,i){return L.makeScale(t,e,i),this.applyMatrix4(L),this}lookAt(t){return Oe.lookAt(t),Oe.updateMatrix(),this.applyMatrix4(Oe.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(Tt).negate(),this.translate(Tt.x,Tt.y,Tt.z),this}setFromPoints(t){const e=[];for(let i=0,s=t.length;i<s;i++){const n=t[i];e.push(n.x,n.y,n.z||0)}return this.setAttribute("position",new qt(e,3)),this}computeBoundingBox(){this.boundingBox===null&&(this.boundingBox=new Ot);const t=this.attributes.position,e=this.morphAttributes.position;if(t&&t.isGLBufferAttribute){console.error("THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box.",this),this.boundingBox.set(new x(-1/0,-1/0,-1/0),new x(1/0,1/0,1/0));return}if(t!==void 0){if(this.boundingBox.setFromBufferAttribute(t),e)for(let i=0,s=e.length;i<s;i++){const n=e[i];H.setFromBufferAttribute(n),this.morphTargetsRelative?(R.addVectors(this.boundingBox.min,H.min),this.boundingBox.expandByPoint(R),R.addVectors(this.boundingBox.max,H.max),this.boundingBox.expandByPoint(R)):(this.boundingBox.expandByPoint(H.min),this.boundingBox.expandByPoint(H.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){this.boundingSphere===null&&(this.boundingSphere=new di);const t=this.attributes.position,e=this.morphAttributes.position;if(t&&t.isGLBufferAttribute){console.error("THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere.",this),this.boundingSphere.set(new x,1/0);return}if(t){const i=this.boundingSphere.center;if(H.setFromBufferAttribute(t),e)for(let n=0,r=e.length;n<r;n++){const o=e[n];Ht.setFromBufferAttribute(o),this.morphTargetsRelative?(R.addVectors(H.min,Ht.min),H.expandByPoint(R),R.addVectors(H.max,Ht.max),H.expandByPoint(R)):(H.expandByPoint(Ht.min),H.expandByPoint(Ht.max))}H.getCenter(i);let s=0;for(let n=0,r=t.count;n<r;n++)R.fromBufferAttribute(t,n),s=Math.max(s,i.distanceToSquared(R));if(e)for(let n=0,r=e.length;n<r;n++){const o=e[n],a=this.morphTargetsRelative;for(let h=0,l=o.count;h<l;h++)R.fromBufferAttribute(o,h),a&&(Tt.fromBufferAttribute(t,h),R.add(Tt)),s=Math.max(s,i.distanceToSquared(R))}this.boundingSphere.radius=Math.sqrt(s),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeTangents(){const t=this.index,e=this.attributes;if(t===null||e.position===void 0||e.normal===void 0||e.uv===void 0){console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");return}const i=e.position,s=e.normal,n=e.uv;this.hasAttribute("tangent")===!1&&this.setAttribute("tangent",new mt(new Float32Array(4*i.count),4));const r=this.getAttribute("tangent"),o=[],a=[];for(let _=0;_<i.count;_++)o[_]=new x,a[_]=new x;const h=new x,l=new x,c=new x,u=new O,d=new O,p=new O,f=new x,y=new x;function g(_,T,E){h.fromBufferAttribute(i,_),l.fromBufferAttribute(i,T),c.fromBufferAttribute(i,E),u.fromBufferAttribute(n,_),d.fromBufferAttribute(n,T),p.fromBufferAttribute(n,E),l.sub(h),c.sub(h),d.sub(u),p.sub(u);const B=1/(d.x*p.y-p.x*d.y);isFinite(B)&&(f.copy(l).multiplyScalar(p.y).addScaledVector(c,-d.y).multiplyScalar(B),y.copy(c).multiplyScalar(d.x).addScaledVector(l,-p.x).multiplyScalar(B),o[_].add(f),o[T].add(f),o[E].add(f),a[_].add(y),a[T].add(y),a[E].add(y))}let M=this.groups;M.length===0&&(M=[{start:0,count:t.count}]);for(let _=0,T=M.length;_<T;++_){const E=M[_],B=E.start,D=E.count;for(let C=B,S=B+D;C<S;C+=3)g(t.getX(C+0),t.getX(C+1),t.getX(C+2))}const A=new x,w=new x,z=new x,F=new x;function b(_){z.fromBufferAttribute(s,_),F.copy(z);const T=o[_];A.copy(T),A.sub(z.multiplyScalar(z.dot(T))).normalize(),w.crossVectors(F,T);const B=w.dot(a[_])<0?-1:1;r.setXYZW(_,A.x,A.y,A.z,B)}for(let _=0,T=M.length;_<T;++_){const E=M[_],B=E.start,D=E.count;for(let C=B,S=B+D;C<S;C+=3)b(t.getX(C+0)),b(t.getX(C+1)),b(t.getX(C+2))}}computeVertexNormals(){const t=this.index,e=this.getAttribute("position");if(e!==void 0){let i=this.getAttribute("normal");if(i===void 0)i=new mt(new Float32Array(e.count*3),3),this.setAttribute("normal",i);else for(let u=0,d=i.count;u<d;u++)i.setXYZ(u,0,0,0);const s=new x,n=new x,r=new x,o=new x,a=new x,h=new x,l=new x,c=new x;if(t)for(let u=0,d=t.count;u<d;u+=3){const p=t.getX(u+0),f=t.getX(u+1),y=t.getX(u+2);s.fromBufferAttribute(e,p),n.fromBufferAttribute(e,f),r.fromBufferAttribute(e,y),l.subVectors(r,n),c.subVectors(s,n),l.cross(c),o.fromBufferAttribute(i,p),a.fromBufferAttribute(i,f),h.fromBufferAttribute(i,y),o.add(l),a.add(l),h.add(l),i.setXYZ(p,o.x,o.y,o.z),i.setXYZ(f,a.x,a.y,a.z),i.setXYZ(y,h.x,h.y,h.z)}else for(let u=0,d=e.count;u<d;u+=3)s.fromBufferAttribute(e,u+0),n.fromBufferAttribute(e,u+1),r.fromBufferAttribute(e,u+2),l.subVectors(r,n),c.subVectors(s,n),l.cross(c),i.setXYZ(u+0,l.x,l.y,l.z),i.setXYZ(u+1,l.x,l.y,l.z),i.setXYZ(u+2,l.x,l.y,l.z);this.normalizeNormals(),i.needsUpdate=!0}}normalizeNormals(){const t=this.attributes.normal;for(let e=0,i=t.count;e<i;e++)R.fromBufferAttribute(t,e),R.normalize(),t.setXYZ(e,R.x,R.y,R.z)}toNonIndexed(){function t(o,a){const h=o.array,l=o.itemSize,c=o.normalized,u=new h.constructor(a.length*l);let d=0,p=0;for(let f=0,y=a.length;f<y;f++){o.isInterleavedBufferAttribute?d=a[f]*o.data.stride+o.offset:d=a[f]*l;for(let g=0;g<l;g++)u[p++]=h[d++]}return new mt(u,l,c)}if(this.index===null)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;const e=new Lt,i=this.index.array,s=this.attributes;for(const o in s){const a=s[o],h=t(a,i);e.setAttribute(o,h)}const n=this.morphAttributes;for(const o in n){const a=[],h=n[o];for(let l=0,c=h.length;l<c;l++){const u=h[l],d=t(u,i);a.push(d)}e.morphAttributes[o]=a}e.morphTargetsRelative=this.morphTargetsRelative;const r=this.groups;for(let o=0,a=r.length;o<a;o++){const h=r[o];e.addGroup(h.start,h.count,h.materialIndex)}return e}toJSON(){const t={metadata:{version:4.6,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(t.uuid=this.uuid,t.type=this.type,this.name!==""&&(t.name=this.name),Object.keys(this.userData).length>0&&(t.userData=this.userData),this.parameters!==void 0){const a=this.parameters;for(const h in a)a[h]!==void 0&&(t[h]=a[h]);return t}t.data={attributes:{}};const e=this.index;e!==null&&(t.data.index={type:e.array.constructor.name,array:Array.prototype.slice.call(e.array)});const i=this.attributes;for(const a in i){const h=i[a];t.data.attributes[a]=h.toJSON(t.data)}const s={};let n=!1;for(const a in this.morphAttributes){const h=this.morphAttributes[a],l=[];for(let c=0,u=h.length;c<u;c++){const d=h[c];l.push(d.toJSON(t.data))}l.length>0&&(s[a]=l,n=!0)}n&&(t.data.morphAttributes=s,t.data.morphTargetsRelative=this.morphTargetsRelative);const r=this.groups;r.length>0&&(t.data.groups=JSON.parse(JSON.stringify(r)));const o=this.boundingSphere;return o!==null&&(t.data.boundingSphere={center:o.center.toArray(),radius:o.radius}),t}clone(){return new this.constructor().copy(this)}copy(t){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const e={};this.name=t.name;const i=t.index;i!==null&&this.setIndex(i.clone(e));const s=t.attributes;for(const h in s){const l=s[h];this.setAttribute(h,l.clone(e))}const n=t.morphAttributes;for(const h in n){const l=[],c=n[h];for(let u=0,d=c.length;u<d;u++)l.push(c[u].clone(e));this.morphAttributes[h]=l}this.morphTargetsRelative=t.morphTargetsRelative;const r=t.groups;for(let h=0,l=r.length;h<l;h++){const c=r[h];this.addGroup(c.start,c.count,c.materialIndex)}const o=t.boundingBox;o!==null&&(this.boundingBox=o.clone());const a=t.boundingSphere;return a!==null&&(this.boundingSphere=a.clone()),this.drawRange.start=t.drawRange.start,this.drawRange.count=t.drawRange.count,this.userData=t.userData,this}dispose(){this.dispatchEvent({type:"dispose"})}}const zi=new Z,ft=new Qi,se=new di,Ai=new x,Et=new x,Bt=new x,kt=new x,Pe=new x,ne=new x,re=new O,ae=new O,oe=new O,Si=new x,Fi=new x,Ci=new x,he=new x,le=new x;class us extends tt{constructor(t=new Lt,e=new os){super(),this.isMesh=!0,this.type="Mesh",this.geometry=t,this.material=e,this.updateMorphTargets()}copy(t,e){return super.copy(t,e),t.morphTargetInfluences!==void 0&&(this.morphTargetInfluences=t.morphTargetInfluences.slice()),t.morphTargetDictionary!==void 0&&(this.morphTargetDictionary=Object.assign({},t.morphTargetDictionary)),this.material=Array.isArray(t.material)?t.material.slice():t.material,this.geometry=t.geometry,this}updateMorphTargets(){const e=this.geometry.morphAttributes,i=Object.keys(e);if(i.length>0){const s=e[i[0]];if(s!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let n=0,r=s.length;n<r;n++){const o=s[n].name||String(n);this.morphTargetInfluences.push(0),this.morphTargetDictionary[o]=n}}}}getVertexPosition(t,e){const i=this.geometry,s=i.attributes.position,n=i.morphAttributes.position,r=i.morphTargetsRelative;e.fromBufferAttribute(s,t);const o=this.morphTargetInfluences;if(n&&o){ne.set(0,0,0);for(let a=0,h=n.length;a<h;a++){const l=o[a],c=n[a];l!==0&&(Pe.fromBufferAttribute(c,t),r?ne.addScaledVector(Pe,l):ne.addScaledVector(Pe.sub(e),l))}e.add(ne)}return e}raycast(t,e){const i=this.geometry,s=this.material,n=this.matrixWorld;s!==void 0&&(i.boundingSphere===null&&i.computeBoundingSphere(),se.copy(i.boundingSphere),se.applyMatrix4(n),ft.copy(t.ray).recast(t.near),!(se.containsPoint(ft.origin)===!1&&(ft.intersectSphere(se,Ai)===null||ft.origin.distanceToSquared(Ai)>(t.far-t.near)**2))&&(zi.copy(n).invert(),ft.copy(t.ray).applyMatrix4(zi),!(i.boundingBox!==null&&ft.intersectsBox(i.boundingBox)===!1)&&this._computeIntersections(t,e,ft)))}_computeIntersections(t,e,i){let s;const n=this.geometry,r=this.material,o=n.index,a=n.attributes.position,h=n.attributes.uv,l=n.attributes.uv1,c=n.attributes.normal,u=n.groups,d=n.drawRange;if(o!==null)if(Array.isArray(r))for(let p=0,f=u.length;p<f;p++){const y=u[p],g=r[y.materialIndex],M=Math.max(y.start,d.start),A=Math.min(o.count,Math.min(y.start+y.count,d.start+d.count));for(let w=M,z=A;w<z;w+=3){const F=o.getX(w),b=o.getX(w+1),_=o.getX(w+2);s=ce(this,g,t,i,h,l,c,F,b,_),s&&(s.faceIndex=Math.floor(w/3),s.face.materialIndex=y.materialIndex,e.push(s))}}else{const p=Math.max(0,d.start),f=Math.min(o.count,d.start+d.count);for(let y=p,g=f;y<g;y+=3){const M=o.getX(y),A=o.getX(y+1),w=o.getX(y+2);s=ce(this,r,t,i,h,l,c,M,A,w),s&&(s.faceIndex=Math.floor(y/3),e.push(s))}}else if(a!==void 0)if(Array.isArray(r))for(let p=0,f=u.length;p<f;p++){const y=u[p],g=r[y.materialIndex],M=Math.max(y.start,d.start),A=Math.min(a.count,Math.min(y.start+y.count,d.start+d.count));for(let w=M,z=A;w<z;w+=3){const F=w,b=w+1,_=w+2;s=ce(this,g,t,i,h,l,c,F,b,_),s&&(s.faceIndex=Math.floor(w/3),s.face.materialIndex=y.materialIndex,e.push(s))}}else{const p=Math.max(0,d.start),f=Math.min(a.count,d.start+d.count);for(let y=p,g=f;y<g;y+=3){const M=y,A=y+1,w=y+2;s=ce(this,r,t,i,h,l,c,M,A,w),s&&(s.faceIndex=Math.floor(y/3),e.push(s))}}}}function ds(m,t,e,i,s,n,r,o){let a;if(t.side===ki?a=i.intersectTriangle(r,n,s,!0,o):a=i.intersectTriangle(s,n,r,t.side===xe,o),a===null)return null;le.copy(o),le.applyMatrix4(m.matrixWorld);const h=e.ray.origin.distanceTo(le);return h<e.near||h>e.far?null:{distance:h,point:le.clone(),object:m}}function ce(m,t,e,i,s,n,r,o,a,h){m.getVertexPosition(o,Et),m.getVertexPosition(a,Bt),m.getVertexPosition(h,kt);const l=ds(m,t,e,i,Et,Bt,kt,he);if(l){s&&(re.fromBufferAttribute(s,o),ae.fromBufferAttribute(s,a),oe.fromBufferAttribute(s,h),l.uv=Y.getInterpolation(he,Et,Bt,kt,re,ae,oe,new O)),n&&(re.fromBufferAttribute(n,o),ae.fromBufferAttribute(n,a),oe.fromBufferAttribute(n,h),l.uv1=Y.getInterpolation(he,Et,Bt,kt,re,ae,oe,new O)),r&&(Si.fromBufferAttribute(r,o),Fi.fromBufferAttribute(r,a),Ci.fromBufferAttribute(r,h),l.normal=Y.getInterpolation(he,Et,Bt,kt,Si,Fi,Ci,new x),l.normal.dot(i.direction)>0&&l.normal.multiplyScalar(-1));const c={a:o,b:a,c:h,normal:new x,materialIndex:0};Y.getNormal(Et,Bt,kt,c.normal),l.face=c}return l}class ps extends rt{constructor(t,e,i,s,n,r,o,a,h,l){if(l=l!==void 0?l:ge,l!==ge&&l!==Qe)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");i===void 0&&l===ge&&(i=Ni),i===void 0&&l===Qe&&(i=Pi),super(null,s,n,r,o,a,l,i,h),this.isDepthTexture=!0,this.image={width:t,height:e},this.magFilter=o!==void 0?o:je,this.minFilter=a!==void 0?a:je,this.flipY=!1,this.generateMipmaps=!1,this.compareFunction=null}copy(t){return super.copy(t),this.compareFunction=t.compareFunction,this}toJSON(t){const e=super.toJSON(t);return this.compareFunction!==null&&(e.compareFunction=this.compareFunction),e}}const ms=new ps(1,1);ms.compareFunction=Hi;class fs extends _i{constructor(t){super(),this.isMeshStandardMaterial=!0,this.defines={STANDARD:""},this.type="MeshStandardMaterial",this.color=new q(16777215),this.roughness=1,this.metalness=0,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new q(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Ui,this.normalScale=new O(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new zt,this.envMapIntensity=1,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.defines={STANDARD:""},this.color.copy(t.color),this.roughness=t.roughness,this.metalness=t.metalness,this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.roughnessMap=t.roughnessMap,this.metalnessMap=t.metalnessMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.envMapRotation.copy(t.envMapRotation),this.envMapIntensity=t.envMapIntensity,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.flatShading=t.flatShading,this.fog=t.fog,this}}typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:He}})),typeof window<"u"&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=He);class ys{constructor(){this.faceDirections={top:{normal:[0,1,0],u:[1,0,0],v:[0,0,1]},bottom:{normal:[0,-1,0],u:[1,0,0],v:[0,0,-1]},north:{normal:[0,0,-1],u:[1,0,0],v:[0,1,0]},south:{normal:[0,0,1],u:[-1,0,0],v:[0,1,0]},east:{normal:[1,0,0],u:[0,0,1],v:[0,1,0]},west:{normal:[-1,0,0],u:[0,0,-1],v:[0,1,0]}},this.cornerOffsets={top:[[-.5,0,-.5],[.5,0,-.5],[.5,0,.5],[-.5,0,.5]],bottom:[[-.5,0,.5],[.5,0,.5],[.5,0,-.5],[-.5,0,-.5]],north:[[-.5,.5,0],[.5,.5,0],[.5,-.5,0],[-.5,-.5,0]],south:[[.5,.5,0],[-.5,.5,0],[-.5,-.5,0],[.5,-.5,0]],east:[[0,.5,-.5],[0,.5,.5],[0,-.5,.5],[0,-.5,-.5]],west:[[0,.5,.5],[0,.5,-.5],[0,-.5,-.5],[0,-.5,.5]]}}calculateVertexAO(t,e,i,s,n,r){if(!this.faceDirections[n])throw new Error(`Invalid face direction: ${n}`);if(r<0||r>3)throw new Error(`Invalid corner index: ${r}. Must be 0-3.`);if((e<=1||e>=32-2||s<=1||s>=32-2)&&t.world)return this.calculateBoundaryVertexAO(t,e,i,s,n,r);const l=this.getVertexNeighbors(e,i,s,n,r);let c=0;for(const d of l)this.isVoxelSolid(t,d.x,d.y,d.z)&&c++;return[1,.75,.5,.25][c]}calculateBoundaryVertexAO(t,e,i,s,n,r){t.chunkX*32+e,t.chunkZ*32+s;const h=this.getVertexNeighbors(e,i,s,n,r);let l=0;for(const u of h){const d=t.chunkX*32+u.x,p=t.chunkZ*32+u.z;t.world.getVoxel(d,u.y,p)>0&&l++}return[1,.75,.5,.25][l]}getVertexNeighbors(t,e,i,s,n){if(!this.faceDirections[s])throw new Error(`Invalid face direction: ${s}`);if(n<0||n>3)throw new Error(`Invalid corner index: ${n}. Must be 0-3.`);const r=[],a={top:[[{x:-1,y:1,z:0},{x:0,y:1,z:-1},{x:-1,y:1,z:-1}],[{x:1,y:1,z:0},{x:0,y:1,z:-1},{x:1,y:1,z:-1}],[{x:1,y:1,z:0},{x:0,y:1,z:1},{x:1,y:1,z:1}],[{x:-1,y:1,z:0},{x:0,y:1,z:1},{x:-1,y:1,z:1}]],bottom:[[{x:-1,y:-1,z:0},{x:0,y:-1,z:1},{x:-1,y:-1,z:1}],[{x:1,y:-1,z:0},{x:0,y:-1,z:1},{x:1,y:-1,z:1}],[{x:1,y:-1,z:0},{x:0,y:-1,z:-1},{x:1,y:-1,z:-1}],[{x:-1,y:-1,z:0},{x:0,y:-1,z:-1},{x:-1,y:-1,z:-1}]],north:[[{x:-1,y:0,z:-1},{x:0,y:1,z:-1},{x:-1,y:1,z:-1}],[{x:1,y:0,z:-1},{x:0,y:1,z:-1},{x:1,y:1,z:-1}],[{x:1,y:0,z:-1},{x:0,y:-1,z:-1},{x:1,y:-1,z:-1}],[{x:-1,y:0,z:-1},{x:0,y:-1,z:-1},{x:-1,y:-1,z:-1}]],south:[[{x:1,y:0,z:1},{x:0,y:1,z:1},{x:1,y:1,z:1}],[{x:-1,y:0,z:1},{x:0,y:1,z:1},{x:-1,y:1,z:1}],[{x:-1,y:0,z:1},{x:0,y:-1,z:1},{x:-1,y:-1,z:1}],[{x:1,y:0,z:1},{x:0,y:-1,z:1},{x:1,y:-1,z:1}]],east:[[{x:1,y:0,z:-1},{x:1,y:1,z:0},{x:1,y:1,z:-1}],[{x:1,y:0,z:1},{x:1,y:1,z:0},{x:1,y:1,z:1}],[{x:1,y:0,z:1},{x:1,y:-1,z:0},{x:1,y:-1,z:1}],[{x:1,y:0,z:-1},{x:1,y:-1,z:0},{x:1,y:-1,z:-1}]],west:[[{x:-1,y:0,z:1},{x:-1,y:1,z:0},{x:-1,y:1,z:1}],[{x:-1,y:0,z:-1},{x:-1,y:1,z:0},{x:-1,y:1,z:-1}],[{x:-1,y:0,z:-1},{x:-1,y:-1,z:0},{x:-1,y:-1,z:-1}],[{x:-1,y:0,z:1},{x:-1,y:-1,z:0},{x:-1,y:-1,z:1}]]}[s][n];for(const h of a)r.push({x:t+h.x,y:e+h.y,z:i+h.z});return r}isVoxelSolid(t,e,i,s){if(i<0||i>=256)return!1;if(e>=0&&e<32&&s>=0&&s<32)return t.getVoxel(e,i,s)>0;if(t.world&&typeof t.world.getVoxel=="function"){const a=t.chunkX*32+e,h=t.chunkZ*32+s;return t.world.getVoxel(a,i,h)>0}else return!1}}class xs{constructor(){this.baseColor=new q(1,1,1),this.colorCache=new Map}aoToColor(t){if(typeof t!="number"||t<0||t>1)throw new Error(`Invalid AO value: ${t}. Must be a number between 0 and 1.`);const e=Math.round(t*1e3)/1e3;if(this.colorCache.has(e))return this.colorCache.get(e).clone();const i=new q(t,t,t);return this.colorCache.set(e,i.clone()),i}interpolateColors(t,e,i){if(!Array.isArray(t)||t.length!==4)throw new Error("cornerColors must be an array of exactly 4 THREE.Color objects");if(typeof e!="number"||e<1||typeof i!="number"||i<1)throw new Error("width and height must be positive numbers");for(let h=0;h<4;h++)if(!(t[h]instanceof q))throw new Error(`cornerColors[${h}] must be a THREE.Color instance`);const[s,n,r,o]=t,a=[];for(let h=0;h<=i;h++)for(let l=0;l<=e;l++){const c=e>0?l/e:0,u=i>0?h/i:0,d=new q().lerpColors(s,n,c),p=new q().lerpColors(o,r,c),f=new q().lerpColors(d,p,u);a.push(f)}return a}applyVertexColors(t,e){if(!(t instanceof Lt))throw new Error("geometry must be a THREE.BufferGeometry instance");if(!Array.isArray(e))throw new Error("colors must be an array of THREE.Color objects");const i=t.getAttribute("position");if(!i)throw new Error("geometry must have a position attribute");const s=i.count;if(e.length!==s)throw new Error(`Color count (${e.length}) must match vertex count (${s})`);for(let r=0;r<e.length;r++)if(!(e[r]instanceof q))throw new Error(`colors[${r}] must be a THREE.Color instance`);const n=new Float32Array(s*3);for(let r=0;r<e.length;r++){const o=e[r],a=r*3;n[a]=o.r,n[a+1]=o.g,n[a+2]=o.b}t.setAttribute("color",new mt(n,3))}createQuadColors(t){if(!Array.isArray(t)||t.length!==4)throw new Error("aoValues must be an array of exactly 4 numbers");for(let e=0;e<4;e++)if(typeof t[e]!="number"||t[e]<0||t[e]>1)throw new Error(`aoValues[${e}] must be a number between 0 and 1`);return t.map(e=>this.aoToColor(e))}batchAoToColors(t){if(!Array.isArray(t))throw new Error("aoValues must be an array");return t.map(e=>this.aoToColor(e))}clearCache(){this.colorCache.clear()}getCacheStats(){return{size:this.colorCache.size,keys:Array.from(this.colorCache.keys())}}}class gs{constructor(){}chooseOptimalDiagonal(t){if(!Array.isArray(t)||t.length!==4)throw new Error("aoValues must be an array of exactly 4 numbers");for(let a=0;a<4;a++)if(typeof t[a]!="number"||t[a]<0||t[a]>1)throw new Error(`aoValues[${a}] must be a number between 0 and 1`);const[e,i,s,n]=t,r=Math.abs(e-s),o=Math.abs(i-n);return r<=o}generateTriangleIndices(t,e){if(typeof t!="number"||t<0)throw new Error("vertexOffset must be a non-negative number");if(typeof e!="boolean")throw new Error("useACDiagonal must be a boolean");const i=t,s=t+1,n=t+2,r=t+3;return e?[i,s,n,i,n,r]:[i,s,r,s,n,r]}generateOptimizedIndices(t,e){const i=this.chooseOptimalDiagonal(e);return this.generateTriangleIndices(t,i)}batchGenerateIndices(t){if(!Array.isArray(t))throw new Error("quads must be an array");const e=[];for(let i=0;i<t.length;i++){const s=t[i];if(!s||typeof s!="object")throw new Error(`quads[${i}] must be an object with vertexOffset and aoValues properties`);if(typeof s.vertexOffset!="number")throw new Error(`quads[${i}].vertexOffset must be a number`);if(!Array.isArray(s.aoValues))throw new Error(`quads[${i}].aoValues must be an array`);const n=this.generateOptimizedIndices(s.vertexOffset,s.aoValues);e.push(...n)}return e}analyzeDiagonalChoices(t){if(!Array.isArray(t))throw new Error("aoValueSets must be an array");let e=0,i=0;const s=[];for(const n of t){const r=this.chooseOptimalDiagonal(n);s.push(r),r?e++:i++}return{total:t.length,acDiagonalCount:e,bdDiagonalCount:i,acPercentage:t.length>0?e/t.length*100:0,bdPercentage:t.length>0?i/t.length*100:0,choices:s}}}const J=32,ue=256,ut=32,bs=64,Ms=[{type:"AIR",color:[0,0,0,0]},{type:"STONE",color:[128,128,128,255]},{type:"DIRT",color:[139,69,19,255]},{type:"GRASS",color:[95,159,53,255]},{type:"WATER",color:[30,144,255,200]},{type:"SNOW",color:[255,255,255,255]}];class ws{constructor(t,e,i=null){this.chunkX=t,this.chunkZ=e,this.world=i,this.voxels=new Uint8Array(J*ue*ut),this.mesh=null,this.isGenerated=!1,this.hasMesh=!1}getVoxel(t,e,i){const s=e*J*ut+i*J+t;return this.voxels[s]}setVoxel(t,e,i,s){const n=e*J*ut+i*J+t;this.voxels[n]=s}generate(t){for(let r=0;r<J;r++)for(let o=0;o<ut;o++){const a=this.chunkX*J+r,h=this.chunkZ*ut+o;let l=1,c=1,u=0;for(let f=0;f<5;f++){const y=a/500*c,g=h/500*c,M=t(y,g);u+=M*l,l*=.1,c*=2}let d=Math.floor(u*35)+150,p;d<120?p=(d-115)*(48/5):d<=180?p=48+(d-120)*(160/60):p=208+(d-180)*(48/5),p=Math.max(0,Math.min(255,Math.floor(p))),u=p;for(let f=0;f<ue;f++)if(f<u){let y=1;u>190?f>=u-3?y=5:f>=u-4&&(y=2):f===u-1?y=3:f>=u-4&&(y=2),this.setVoxel(r,f,o,y)}}for(let r=0;r<J;r++)for(let o=0;o<ut;o++)for(let a=bs;a>=0;a--)this.getVoxel(r,a,o)===0&&this.setVoxel(r,a,o,4)}dispose(){this.mesh&&(this.mesh.geometry.dispose(),this.mesh.material.dispose(),this.mesh=null)}areNeighborsReady(){if(!this.world)return!1;const t=[[this.chunkX-1,this.chunkZ],[this.chunkX+1,this.chunkZ],[this.chunkX,this.chunkZ-1],[this.chunkX,this.chunkZ+1]];for(const[e,i]of t){const s=`${e},${i}`,n=this.world.chunks[s];if(!n||!n.isGenerated||this.world.pendingChunks.has(s))return!1}return!0}createMesh(t=!1){const e=[],i=[],s=[],n=[],r=[],o=t||this.areNeighborsReady();this.world&&!o&&!t?console.log(`Chunk (${this.chunkX}, ${this.chunkZ}) creating mesh without AO - neighbors not ready`):o&&console.log(`Chunk (${this.chunkX}, ${this.chunkZ}) creating mesh with AO`);let a,h,l;o&&(a=new ys,h=new xs,l=new gs);const c=[{normal:[1,0,0],name:"east",vertices:[[1,0,0],[1,1,0],[1,1,1],[1,0,1]],aoCornerMap:[3,0,1,2]},{normal:[-1,0,0],name:"west",vertices:[[0,0,1],[0,1,1],[0,1,0],[0,0,0]],aoCornerMap:[3,0,1,2]},{normal:[0,1,0],name:"top",vertices:[[0,1,0],[0,1,1],[1,1,1],[1,1,0]],aoCornerMap:[0,3,2,1]},{normal:[0,-1,0],name:"bottom",vertices:[[0,0,1],[0,0,0],[1,0,0],[1,0,1]],aoCornerMap:[0,3,2,1]},{normal:[0,0,1],name:"south",vertices:[[1,0,1],[1,1,1],[0,1,1],[0,0,1]],aoCornerMap:[3,0,1,2]},{normal:[0,0,-1],name:"north",vertices:[[0,0,0],[0,1,0],[1,1,0],[1,0,0]],aoCornerMap:[3,0,1,2]}];for(let p=0;p<J;p++)for(let f=0;f<ue;f++)for(let y=0;y<ut;y++){const g=this.getVoxel(p,f,y);if(g!==0)for(const M of c){const A=p+M.normal[0],w=f+M.normal[1],z=y+M.normal[2];if(this.getVoxelSafe(A,w,z)!==0)continue;const b=e.length/3;for(const S of M.vertices)e.push(p+S[0],f+S[1],y+S[2]);for(let S=0;S<4;S++)i.push(M.normal[0],M.normal[1],M.normal[2]);s.push(0,0,1,0,1,1,0,1);let _=[1,1,1,1];if(o){_=[];for(let S=0;S<4;S++)try{const I=M.aoCornerMap[S],Rt=a.calculateVertexAO(this,p,f,y,M.name,I);_.push(Rt)}catch{_.push(1)}}const T=Ms[g].color,E=T[0]/255,B=T[1]/255,D=T[2]/255;if(o)for(let S=0;S<4;S++){const I=h.aoToColor(_[S]);r.push(E*I.r,B*I.g,D*I.b)}else for(let S=0;S<4;S++)r.push(E,B,D);(o?l.chooseOptimalDiagonal(_):!1)?(n.push(b,b+1,b+2),n.push(b,b+2,b+3)):(n.push(b,b+1,b+3),n.push(b+1,b+2,b+3))}}const u=new Lt;u.setAttribute("position",new qt(e,3)),u.setAttribute("normal",new qt(i,3)),u.setAttribute("uv",new qt(s,2)),u.setAttribute("color",new qt(r,3)),u.setIndex(n);const d=new fs({vertexColors:!0});return this.mesh=new us(u,d),this.hasMesh=!0,this.mesh}getVoxelSafe(t,e,i){return t<0||t>=J||e<0||e>=ue||i<0||i>=ut?0:this.getVoxel(t,e,i)}}self.onmessage=function(m){const{chunkX:t,chunkZ:e,noiseSeed:i}=m.data;try{const s=Ei(()=>i),n=new ws(t,e);n.generate(s);const r={chunkX:t,chunkZ:e,voxels:n.voxels};self.postMessage({type:"chunkGenerated",chunkData:r,callbackId:m.data.callbackId})}catch(s){self.postMessage({type:"error",error:s.message})}}})();
